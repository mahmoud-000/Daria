{"version":3,"file":"/assets/dist/js/app.js","mappings":"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","sources":["webpack://linkace/webpack/runtime/chunk loaded","webpack://linkace/./resources/assets/js/lib/views.js","webpack://linkace/./resources/assets/js/components/Base.js","webpack://linkace/./resources/assets/js/lib/helper.js","webpack://linkace/./resources/assets/js/components/TagsSelect.js","webpack://linkace/./resources/assets/js/components/UrlField.js","webpack://linkace/./resources/assets/js/components/LoadingButton.js","webpack://linkace/./resources/assets/js/components/BookmarkTimer.js","webpack://linkace/./resources/assets/js/components/SimpleSelect.js","webpack://linkace/./resources/assets/js/components/ShareToggleAll.js","webpack://linkace/./resources/assets/js/components/GenerateApiToken.js","webpack://linkace/./resources/assets/js/components/GenerateCronToken.js","webpack://linkace/./resources/assets/js/components/UpdateCheck.js","webpack://linkace/./resources/assets/js/components/Import.js","webpack://linkace/./resources/assets/js/app.js","webpack://linkace/./node_modules/tom-select/dist/js/plugins/caret_position.js","webpack://linkace/./node_modules/tom-select/dist/js/plugins/input_autogrow.js","webpack://linkace/./node_modules/tom-select/dist/js/tom-select.complete.js","webpack://linkace/webpack/bootstrap","webpack://linkace/webpack/runtime/compat get default export","webpack://linkace/webpack/runtime/define property getters","webpack://linkace/webpack/runtime/hasOwnProperty shorthand","webpack://linkace/webpack/runtime/jsonp chunk loading","webpack://linkace/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\n * View elements\n * @type {HTMLElement[]}\n */\nconst $views = [];\n\n/**\n * View instances\n * @type {object[]}\n */\nconst views = [];\n\n/**\n * Registers a view to a name and saves a reference.\n * @param {string} name View name\n * @param {function} invokable View class\n * @param {HTMLElement} [$root=document.documentElement] Root element\n * @return {void}\n */\nexport function register (name, invokable, $root = document.documentElement) {\n  // Retrieve all view elements in root\n  const $elements = [...$root.querySelectorAll(`${name}`)];\n\n  // Create an instance for each view\n  $elements.forEach($element => getInstance($element, invokable));\n}\n\n/**\n * Returns the view instance by given element.\n * @return {HTMLElement} $element Element\n * @return {function} invokable Element class\n * @return {object}|null View instance or null if there is none\n */\nexport function getInstance ($element, invokable = null) {\n  const index = $views.indexOf($element);\n  if (index !== -1) {\n    return views[index];\n  } else if (invokable !== null && $views.indexOf($element) === -1) {\n    const view = new invokable($element);\n    $views.push($element);\n    views.push(view);\n    return view;\n  } else {\n    return null;\n  }\n}\n","export default class Base {\n\n  constructor () {\n    this.initAppData();\n  }\n\n  initAppData () {\n    // Load data passed by the backend to the JS\n    let data = document.querySelector('meta[property=\"la-app-data\"]').getAttribute('content');\n    window.appData = JSON.parse(data);\n  }\n}\n","/**\n * Debounce a function with a given timeout\n *\n * @see https://gist.github.com/makenova/7885923\n * @param {CallableFunction} callback\n * @param {int} [timeout=500] timeout\n */\nexport function debounce (callback, timeout = 500) {\n  if (window.timeoutId) {\n    window.clearTimeout(window.timeoutId);\n  }\n\n  window.timeoutId = window.setTimeout(function () {\n    callback();\n  }, timeout);\n}\n","import TomSelect from 'tom-select';\nimport TomSelect_caret_position\n  from 'tom-select/dist/js/plugins/caret_position';\nimport TomSelect_input_autogrow\n  from 'tom-select/dist/js/plugins/input_autogrow';\n\nTomSelect.define('caret_position', TomSelect_caret_position);\nTomSelect.define('input_autogrow', TomSelect_input_autogrow);\n\nexport default class TagsSelect {\n\n  constructor ($el) {\n    if (!$el.dataset.tagType) {\n      return;\n    }\n\n    this.$el = $el;\n    this.type = this.$el.dataset.tagType;\n    this.select = null;\n\n    this.$suggestions = $el.parentElement.querySelector('.tag-suggestions');\n    this.$suggestionsContent = $el.parentElement.querySelector('.tag-suggestions-content');\n\n    this.config = {\n      plugins: ['caret_position', 'input_autogrow'],\n      delimiter: ',',\n      persist: false,\n      create: this.selectAllowsCreation(),\n      onItemAdd:function(){\n        this.setTextboxValue('');\n        this.refreshOptions();\n      },\n      load: (query, callback) => {\n        this.handleTagLoading(query, callback);\n      }\n    };\n\n    this.select = new TomSelect(this.$el, this.config);\n  }\n\n  selectAllowsCreation () {\n    return typeof this.$el.dataset.allowCreation !== 'undefined';\n  }\n\n  handleTagLoading (query, callback) {\n    if (!query.length) return callback();\n\n    fetch(this.getFetchUrl(), {\n      method: 'POST',\n      credentials: 'same-origin',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        _token: window.appData.user.token,\n        query: query\n      })\n    }).then((response) => {\n      return response.json();\n    }).then((results) => {\n      callback(results);\n    }).catch(() => {\n      callback();\n    });\n  }\n\n  getFetchUrl () {\n    return this.type === 'tags'\n      ? window.appData.routes.fetch.searchTags\n      : window.appData.routes.fetch.searchLists;\n  }\n\n  displayNewSuggestions (tags) {\n    if (typeof tags !== 'object' || tags.length === 0) {\n      return;\n    }\n\n    this.$suggestionsContent.innerHTML = '';\n\n    tags.forEach(newTag => {\n      newTag = newTag.trim();\n\n      const $tag = document.createElement('span');\n      $tag.classList.add('btn', 'btn-outline-secondary', 'btn-xs');\n      $tag.innerText = newTag;\n\n      $tag.onclick = this.onSuggestionClick.bind(this, $tag);\n\n      this.$suggestionsContent.appendChild($tag);\n    });\n\n    this.$suggestions.classList.remove('d-none');\n  }\n\n  onSuggestionClick ($tag) {\n    const value = $tag.innerText;\n\n    this.select.addOption({value: value, text: value});\n    this.select.addItem(value);\n\n    $tag.onclick = null;\n    $tag.classList.remove('cursor-pointer');\n    $tag.classList.add('text-success');\n  }\n}\n","import { debounce } from '../lib/helper';\nimport { getInstance } from '../lib/views';\nimport TagsSelect from './TagsSelect';\n\nexport default class UrlField {\n\n  constructor ($el) {\n    this.$field = $el;\n\n    this.$linkExistsWarning = document.querySelector('.link-exists');\n\n    if (!this.$linkExistsWarning) {\n      return;\n    }\n\n    this.$linkExistsLink = this.$linkExistsWarning.querySelector('a');\n\n    const $tags = document.querySelector('#tags');\n    this.tagSuggestions = $tags ? getInstance($tags, TagsSelect) : null;\n\n    this.$field.addEventListener('keyup', this.onKeyup.bind(this));\n  }\n\n  onKeyup () {\n    // Debounce the keyup function to wait 500ms until the last input was typed\n    debounce(() => {\n      const value = this.$field.value;\n\n      // Check for existing links if the value is longer than http://\n      if (value.length > 6) {\n        this.checkForExistingUrl(value);\n      } else {\n        this.resetField();\n      }\n    });\n  }\n\n  checkForExistingUrl (url) {\n    const checkUrl = window.appData.routes.fetch.existingLinks;\n\n    fetch(checkUrl, {\n      method: 'POST',\n      credentials: 'same-origin',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        _token: window.appData.user.token,\n        ignore_id: this.$field.dataset.ignoreId ?? null,\n        query: url\n      })\n    }).then((response) => {\n      return response.json();\n    }).then((result) => {\n\n      // If the link already exist, mark the field as invalid\n      if (result.linkFound === true) {\n        this.$field.classList.add('is-invalid');\n        this.$linkExistsLink.href = result.editLink;\n        this.$linkExistsWarning.classList.remove('d-none');\n      } else {\n        this.$field.classList.remove('is-invalid');\n        this.$linkExistsWarning.classList.add('d-none');\n        this.$linkExistsLink.href = '';\n        this.querySiteForMetaTags(url);\n      }\n\n    });\n  }\n\n  resetField () {\n    this.$field.classList.remove('is-invalid');\n  }\n\n  querySiteForMetaTags (url) {\n    if (this.tagSuggestions === null) {\n      // Abort if tag suggestions are not available\n      return;\n    }\n\n    fetch(window.appData.routes.fetch.htmlForUrl, {\n      method: 'POST',\n      credentials: 'same-origin',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        _token: window.appData.user.token,\n        url: url\n      })\n    })\n      .then(response => response.text())\n      .then(body => {\n        if (body !== null) {\n          this.parseHtmlForKeywords(body);\n        }\n      });\n  }\n\n  parseHtmlForKeywords (body) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(body, 'text/html');\n\n    if (doc.head.children.length > 0) {\n      const keywords = doc.head.children.namedItem('keywords')\n        || doc.head.children.namedItem('Keywords');\n\n      if (keywords !== null && keywords.content.length > 0) {\n        this.tagSuggestions.displayNewSuggestions(keywords.content.split(','));\n      }\n    }\n  }\n}\n","export default class LoadingButton {\n\n  constructor ($el) {\n    this.$btn = $el;\n    this.$form = this.$btn.form;\n\n    this.$btn.addEventListener('click', this.onClick.bind(this));\n  }\n\n  onClick () {\n    if (this.$form.checkValidity()) {\n      this.$btn.disabled = true;\n      this.$form.submit();\n    }\n  }\n}\n","export default class BookmarkTimer {\n\n  constructor ($el) {\n    this.$el = $el;\n    this.init();\n  }\n\n  init () {\n    window.setInterval(() => {\n      this.$el.innerText = parseInt(this.$el.innerText) - 1;\n    }, 1000);\n\n    window.setTimeout(() => {\n      window.close();\n    }, 5000);\n  }\n}\n","import TomSelect from 'tom-select';\nimport TomSelect_caret_position from 'tom-select/dist/js/plugins/caret_position';\nimport TomSelect_input_autogrow from 'tom-select/dist/js/plugins/input_autogrow';\n\nTomSelect.define('caret_position', TomSelect_caret_position);\nTomSelect.define('input_autogrow', TomSelect_input_autogrow);\n\nexport default class SimpleSelect {\n\n  constructor ($el) {\n    new TomSelect($el, {\n      plugins: ['caret_position', 'input_autogrow'],\n      create: false\n    });\n  }\n}\n","export default class ShareToggleAll {\n\n  constructor ($el) {\n    this.$toggle = $el;\n    this.shareToggles = document.documentElement.querySelectorAll('.sharing-checkbox-input');\n\n    this.$toggle.addEventListener('click', this.onToggleClick.bind(this));\n  }\n\n  onToggleClick () {\n    this.shareToggles.forEach(toggle => {\n      toggle.checked = !toggle.checked;\n    })\n  }\n}\n","import { debounce } from '../lib/helper';\n\nexport default class GenerateApiToken {\n\n  constructor ($el) {\n    this.$el = $el;\n\n    this.$input = $el.querySelector('.api-token-input');\n    this.$btn = $el.querySelector('.api-token-generate');\n    this.$failureMsg = $el.querySelector('.api-token-generate-failure');\n\n    this.$btn.addEventListener('click', this.onButtonClick.bind(this));\n  }\n\n  onButtonClick () {\n    this.$btn.disabled = true;\n\n    this.fetchNewToken();\n  }\n\n  fetchNewToken () {\n\n    const fetchURL = window.appData.routes.fetch.generateApiToken;\n\n    fetch(fetchURL, {\n      method: 'POST',\n      credentials: 'same-origin',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        _token: window.appData.user.token\n      })\n    }).then((response) => {\n      return response.json();\n    }).then(response => {\n      this.handleResponse(response);\n    }).catch(() => {\n      this.showFailureMsg();\n    });\n\n  }\n\n  handleResponse (response) {\n\n    if (typeof response.new_token !== 'undefined') {\n      debounce(() => {\n        this.$input.value = response.new_token;\n      }, 1000);\n\n      window.setTimeout(() => {\n        this.$btn.disabled = false;\n      }, 5000);\n    } else {\n      this.showFailureMsg();\n    }\n\n  }\n\n  showFailureMsg () {\n    this.$failureMsg.classList.remove('d-none');\n  }\n}\n","import { debounce } from '../lib/helper';\n\nexport default class GenerateCronToken {\n\n  constructor ($el) {\n    this.$el = $el;\n\n    this.$input = $el.querySelector('.cron-token-input');\n    this.$btn = $el.querySelector('.cron-token-generate');\n    this.$failureMsg = $el.querySelector('.cron-token-generate-failure');\n    this.$cronUrl = $el.querySelector('.cron-token-url');\n\n    this.$btn.addEventListener('click', this.onButtonClick.bind(this));\n  }\n\n  onButtonClick () {\n    this.$btn.disabled = true;\n\n    this.fetchNewToken();\n  }\n\n  fetchNewToken () {\n\n    if (!confirm(this.$el.dataset.confirmMessage)) {\n      this.$btn.disabled = false;\n      return;\n    }\n\n    const fetchURL = window.appData.routes.fetch.generateCronToken;\n\n    fetch(fetchURL, {\n      method: 'POST',\n      credentials: 'same-origin',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        _token: window.appData.user.token\n      })\n    }).then(response => {\n      return response.json();\n    }).then(response => {\n      this.handleResponse(response);\n    }).catch(() => {\n      this.showFailureMsg();\n    });\n\n  }\n\n  handleResponse (response) {\n\n    if (typeof response.new_token !== 'undefined') {\n      debounce(() => {\n        this.$input.value = response.new_token;\n        this.$cronUrl.innerHTML = this.buildCronURl(response.new_token);\n      }, 1000);\n\n      window.setTimeout(() => {\n        this.$btn.disabled = false;\n      }, 5000);\n    } else {\n      this.showFailureMsg();\n    }\n\n  }\n\n  showFailureMsg () {\n    this.$failureMsg.classList.remove('d-none');\n  }\n\n  buildCronURl (newToken) {\n    return this.$el.dataset.cronUrlBase + newToken;\n  }\n}\n","import { debounce } from '../lib/helper';\n\nexport default class UpdateCheck {\n\n  constructor ($el) {\n    this.$el = $el;\n\n    this.result = null;\n    this.currentVersion = this.$el.dataset.currentVersion;\n\n    this.$running = $el.querySelector('.update-check-running');\n    this.$versionFound = $el.querySelector('.update-check-version-found');\n    this.$success = $el.querySelector('.update-check-success');\n    this.$failed = $el.querySelector('.update-check-failed');\n\n    this.init();\n  }\n\n  init () {\n    this.checkForUpdate().then(result => {\n      this.result = result;\n      this.updateCheckStatus();\n    });\n  }\n\n  updateCheckStatus () {\n    this.$running.classList.add('d-none');\n\n    if (typeof this.result === 'string') {\n      this.$versionFound.innerText = this.$versionFound.innerText.replace('#VERSION#', this.result);\n      this.$versionFound.classList.remove('d-none');\n    } else if (this.result === true) {\n      this.$success.classList.remove('d-none');\n    } else {\n      this.$failed.classList.remove('d-none');\n    }\n  }\n\n  async checkForUpdate () {\n    return fetch(window.appData.routes.fetch.updateCheck, {\n      credentials: 'same-origin',\n      headers: {'Content-Type': 'application/json'}\n    }).then((response) => {\n      return response.json();\n    }).then((results) => {\n      return results.checkResult;\n    }).catch(() => {\n      return false;\n    });\n  }\n}\n","export default class Import {\n\n  constructor ($el) {\n    this.$el = $el;\n    this.$file = $el.querySelector('#import-file');\n\n    this.$submit = $el.querySelector('.import-submit');\n    this.$submitProcessing = $el.querySelector('.import-submit-processing');\n    this.$submitDefault = $el.querySelector('.import-submit-default');\n\n    this.$alertNetworkError = $el.querySelector('.import-alert-networkerror');\n    this.$alertWarning = $el.querySelector('.import-alert-warning');\n    this.$alertSuccess = $el.querySelector('.import-alert-success');\n\n    this.$submit.addEventListener('click', this.onSubmit.bind(this));\n  }\n\n  onSubmit () {\n\n    this.toggleSubmitBtnState();\n\n    const formData = new FormData();\n    formData.append('import-file', this.$file.files[0]);\n    formData.append('_token', window.appData.user.token);\n\n    fetch(this.$el.dataset.action, {\n      method: 'POST',\n      credentials: 'same-origin',\n      headers: {'Accept': 'application/json'},\n      body: formData\n    }).then((response) => {\n\n      if (response.ok === false) {\n        console.log(response);\n        this.$alertNetworkError.classList.remove('d-none');\n        return response;\n      }\n\n      return response.json();\n    }).then((result) => {\n      this.toggleSubmitBtnState();\n\n      if (result.ok === false) {\n        return;\n      }\n\n      if (result.success) {\n        this.$alertSuccess.innerText = result.message;\n        this.$alertSuccess.classList.remove('d-none');\n      } else {\n        this.$alertWarning.innerText = result.message;\n        this.$alertWarning.classList.remove('d-none');\n      }\n\n    });\n  }\n\n  toggleSubmitBtnState (isProcessing) {\n    this.$submit.disabled = !isProcessing;\n\n    this.$submitProcessing.classList.toggle('d-none');\n    this.$submitDefault.classList.toggle('d-none');\n  }\n}\n","import { register } from './lib/views';\n\nimport Base from './components/Base';\nimport UrlField from './components/UrlField';\nimport LoadingButton from './components/LoadingButton';\nimport BookmarkTimer from './components/BookmarkTimer';\nimport TagsSelect from './components/TagsSelect';\nimport SimpleSelect from './components/SimpleSelect';\nimport ShareToggleAll from './components/ShareToggleAll';\nimport GenerateApiToken from './components/GenerateApiToken';\nimport GenerateCronToken from './components/GenerateCronToken';\nimport UpdateCheck from './components/UpdateCheck';\nimport Import from './components/Import';\n\n// Register view components\nfunction registerViews () {\n  register('#app', Base);\n  register('input[id=\"url\"]', UrlField);\n  register('button[type=\"submit\"]', LoadingButton);\n  register('.bm-timer', BookmarkTimer);\n  register('.tag-select', TagsSelect);\n  register('.simple-select', SimpleSelect);\n  register('.share-toggle', ShareToggleAll);\n  register('.api-token', GenerateApiToken);\n  register('.cron-token', GenerateCronToken);\n  register('.update-check', UpdateCheck);\n  register('.import-form', Import);\n}\n\nif (document.readyState !== 'loading') {\n  registerViews();\n} else {\n  document.addEventListener('DOMContentLoaded', registerViews);\n}\n","/**\n* Tom Select v2.1.0\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.caret_position = factory());\n})(this, (function () { 'use strict';\n\n\t// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\n\tconst latin_convert = {\n\t  'æ': 'ae',\n\t  'ⱥ': 'a',\n\t  'ø': 'o'\n\t};\n\tnew RegExp(Object.keys(latin_convert).join('|'), 'gu');\n\n\t// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\n\tconst iterate = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Remove css classes\n\t *\n\t */\n\n\tconst removeClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.remove(cls);\n\t    });\n\t  });\n\t};\n\t/**\n\t * Return arguments\n\t *\n\t */\n\n\tconst classesArray = args => {\n\t  var classes = [];\n\t  iterate(args, _classes => {\n\t    if (typeof _classes === 'string') {\n\t      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t    }\n\n\t    if (Array.isArray(_classes)) {\n\t      classes = classes.concat(_classes);\n\t    }\n\t  });\n\t  return classes.filter(Boolean);\n\t};\n\t/**\n\t * Create an array from arg if it's not already an array\n\t *\n\t */\n\n\tconst castAsArray = arg => {\n\t  if (!Array.isArray(arg)) {\n\t    arg = [arg];\n\t  }\n\n\t  return arg;\n\t};\n\t/**\n\t * Get the index of an element amongst sibling nodes of the same type\n\t *\n\t */\n\n\tconst nodeIndex = (el, amongst) => {\n\t  if (!el) return -1;\n\t  amongst = amongst || el.nodeName;\n\t  var i = 0;\n\n\t  while (el = el.previousElementSibling) {\n\t    if (el.matches(amongst)) {\n\t      i++;\n\t    }\n\t  }\n\n\t  return i;\n\t};\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction plugin () {\n\t  var self = this;\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\n\t  self.hook('instead', 'setCaret', new_pos => {\n\t    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n\t      new_pos = self.items.length;\n\t    } else {\n\t      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t      if (new_pos != self.caretPos && !self.isPending) {\n\t        self.controlChildren().forEach((child, j) => {\n\t          if (j < new_pos) {\n\t            self.control_input.insertAdjacentElement('beforebegin', child);\n\t          } else {\n\t            self.control.appendChild(child);\n\t          }\n\t        });\n\t      }\n\t    }\n\n\t    self.caretPos = new_pos;\n\t  });\n\t  self.hook('instead', 'moveCaret', direction => {\n\t    if (!self.isFocused) return; // move caret before or after selected items\n\n\t    const last_active = self.getLastActive(direction);\n\n\t    if (last_active) {\n\t      const idx = nodeIndex(last_active);\n\t      self.setCaret(direction > 0 ? idx + 1 : idx);\n\t      self.setActiveItem();\n\t      removeClasses(last_active, 'last-active'); // move caret left or right of current position\n\t    } else {\n\t      self.setCaret(self.caretPos + direction);\n\t    }\n\t  });\n\t}\n\n\treturn plugin;\n\n}));\n//# sourceMappingURL=caret_position.js.map\n","/**\n* Tom Select v2.1.0\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.input_autogrow = factory());\n})(this, (function () { 'use strict';\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t */\n\t/**\n\t * Prevent default\n\t *\n\t */\n\n\tconst addEvent = (target, type, callback, options) => {\n\t  target.addEventListener(type, callback, options);\n\t};\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction plugin () {\n\t  var self = this;\n\t  self.on('initialize', () => {\n\t    var test_input = document.createElement('span');\n\t    var control = self.control_input;\n\t    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\t    self.wrapper.appendChild(test_input);\n\t    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n\n\t    for (const style_name of transfer_styles) {\n\t      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t      test_input.style[style_name] = control.style[style_name];\n\t    }\n\t    /**\n\t     * Set the control width\n\t     *\n\t     */\n\n\n\t    var resize = () => {\n\t      test_input.textContent = control.value;\n\t      control.style.width = test_input.clientWidth + 'px';\n\t    };\n\n\t    resize();\n\t    self.on('update item_add item_remove', resize);\n\t    addEvent(control, 'input', resize);\n\t    addEvent(control, 'keyup', resize);\n\t    addEvent(control, 'blur', resize);\n\t    addEvent(control, 'update', resize);\n\t  });\n\t}\n\n\treturn plugin;\n\n}));\n//# sourceMappingURL=input_autogrow.js.map\n","/**\n* Tom Select v2.1.0\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n})(this, (function () { 'use strict';\n\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\t/**\n\t * Execute callback for each event in space separated list of event names\n\t *\n\t */\n\tfunction forEvents(events, callback) {\n\t  events.split(/\\s+/).forEach(event => {\n\t    callback(event);\n\t  });\n\t}\n\n\tclass MicroEvent {\n\t  constructor() {\n\t    this._events = void 0;\n\t    this._events = {};\n\t  }\n\n\t  on(events, fct) {\n\t    forEvents(events, event => {\n\t      this._events[event] = this._events[event] || [];\n\n\t      this._events[event].push(fct);\n\t    });\n\t  }\n\n\t  off(events, fct) {\n\t    var n = arguments.length;\n\n\t    if (n === 0) {\n\t      this._events = {};\n\t      return;\n\t    }\n\n\t    forEvents(events, event => {\n\t      if (n === 1) return delete this._events[event];\n\t      if (event in this._events === false) return;\n\n\t      this._events[event].splice(this._events[event].indexOf(fct), 1);\n\t    });\n\t  }\n\n\t  trigger(events, ...args) {\n\t    var self = this;\n\t    forEvents(events, event => {\n\t      if (event in self._events === false) return;\n\n\t      for (let fct of self._events[event]) {\n\t        fct.apply(self, args);\n\t      }\n\t    });\n\t  }\n\n\t}\n\n\t/**\n\t * microplugin.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\tfunction MicroPlugin(Interface) {\n\t  Interface.plugins = {};\n\t  return class extends Interface {\n\t    constructor(...args) {\n\t      super(...args);\n\t      this.plugins = {\n\t        names: [],\n\t        settings: {},\n\t        requested: {},\n\t        loaded: {}\n\t      };\n\t    }\n\n\t    /**\n\t     * Registers a plugin.\n\t     *\n\t     * @param {function} fn\n\t     */\n\t    static define(name, fn) {\n\t      Interface.plugins[name] = {\n\t        'name': name,\n\t        'fn': fn\n\t      };\n\t    }\n\t    /**\n\t     * Initializes the listed plugins (with options).\n\t     * Acceptable formats:\n\t     *\n\t     * List (without options):\n\t     *   ['a', 'b', 'c']\n\t     *\n\t     * List (with options):\n\t     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t     *\n\t     * Hash (with options):\n\t     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t     *\n\t     * @param {array|object} plugins\n\t     */\n\n\n\t    initializePlugins(plugins) {\n\t      var key, name;\n\t      const self = this;\n\t      const queue = [];\n\n\t      if (Array.isArray(plugins)) {\n\t        plugins.forEach(plugin => {\n\t          if (typeof plugin === 'string') {\n\t            queue.push(plugin);\n\t          } else {\n\t            self.plugins.settings[plugin.name] = plugin.options;\n\t            queue.push(plugin.name);\n\t          }\n\t        });\n\t      } else if (plugins) {\n\t        for (key in plugins) {\n\t          if (plugins.hasOwnProperty(key)) {\n\t            self.plugins.settings[key] = plugins[key];\n\t            queue.push(key);\n\t          }\n\t        }\n\t      }\n\n\t      while (name = queue.shift()) {\n\t        self.require(name);\n\t      }\n\t    }\n\n\t    loadPlugin(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      var plugin = Interface.plugins[name];\n\n\t      if (!Interface.plugins.hasOwnProperty(name)) {\n\t        throw new Error('Unable to find \"' + name + '\" plugin');\n\t      }\n\n\t      plugins.requested[name] = true;\n\t      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t      plugins.names.push(name);\n\t    }\n\t    /**\n\t     * Initializes a plugin.\n\t     *\n\t     */\n\n\n\t    require(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\n\t      if (!self.plugins.loaded.hasOwnProperty(name)) {\n\t        if (plugins.requested[name]) {\n\t          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n\t        }\n\n\t        self.loadPlugin(name);\n\t      }\n\n\t      return plugins.loaded[name];\n\t    }\n\n\t  };\n\t}\n\n\t// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\n\t// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\tvar latin_pat;\n\tconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\n\n\tconst accent_reg = new RegExp(accent_pat, 'gu');\n\tvar diacritic_patterns;\n\tconst latin_convert = {\n\t  'æ': 'ae',\n\t  'ⱥ': 'a',\n\t  'ø': 'o'\n\t};\n\tconst convert_pat = new RegExp(Object.keys(latin_convert).join('|'), 'gu');\n\tconst code_points = [[0, 65535]];\n\t/**\n\t * Remove accents\n\t * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n\t *\n\t */\n\n\tconst asciifold = str => {\n\t  return str.normalize('NFKD').replace(accent_reg, '').toLowerCase().replace(convert_pat, function (foreignletter) {\n\t    return latin_convert[foreignletter];\n\t  });\n\t};\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t *\n\t */\n\n\tconst arrayToPattern = (chars, glue = '|') => {\n\t  if (chars.length == 1) {\n\t    return chars[0];\n\t  }\n\n\t  var longest = 1;\n\t  chars.forEach(a => {\n\t    longest = Math.max(longest, a.length);\n\t  });\n\n\t  if (longest == 1) {\n\t    return '[' + chars.join('') + ']';\n\t  }\n\n\t  return '(?:' + chars.join(glue) + ')';\n\t};\n\tconst escapeToPattern = chars => {\n\t  const escaped = chars.map(diacritic => escape_regex(diacritic));\n\t  return arrayToPattern(escaped);\n\t};\n\t/**\n\t * Get all possible combinations of substrings that add up to the given string\n\t * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n\t *\n\t */\n\n\tconst allSubstrings = input => {\n\t  if (input.length === 1) return [[input]];\n\t  var result = [];\n\t  allSubstrings(input.substring(1)).forEach(function (subresult) {\n\t    var tmp = subresult.slice(0);\n\t    tmp[0] = input.charAt(0) + tmp[0];\n\t    result.push(tmp);\n\t    tmp = subresult.slice(0);\n\t    tmp.unshift(input.charAt(0));\n\t    result.push(tmp);\n\t  });\n\t  return result;\n\t};\n\t/**\n\t * Generate a list of diacritics from the list of code points\n\t *\n\t */\n\n\tconst generateDiacritics = code_points => {\n\t  var diacritics = {};\n\t  code_points.forEach(code_range => {\n\t    for (let i = code_range[0]; i <= code_range[1]; i++) {\n\t      let diacritic = String.fromCharCode(i);\n\t      let latin = asciifold(diacritic);\n\n\t      if (latin == diacritic.toLowerCase()) {\n\t        continue;\n\t      } // skip when latin is a string longer than 3 characters long\n\t      // bc the resulting regex patterns will be long\n\t      // eg:\n\t      // latin صلى الله عليه وسلم length 18 code point 65018\n\t      // latin جل جلاله length 8 code point 65019\n\n\n\t      if (latin.length > 3) {\n\t        continue;\n\t      }\n\n\t      if (!(latin in diacritics)) {\n\t        diacritics[latin] = [latin];\n\t      }\n\n\t      var patt = new RegExp(escapeToPattern(diacritics[latin]), 'iu');\n\n\t      if (diacritic.match(patt)) {\n\t        continue;\n\t      }\n\n\t      diacritics[latin].push(diacritic);\n\t    }\n\t  }); // filter out if there's only one character in the list\n\n\t  let latin_chars = Object.keys(diacritics);\n\n\t  for (let i = 0; i < latin_chars.length; i++) {\n\t    const latin = latin_chars[i];\n\n\t    if (diacritics[latin].length < 2) {\n\t      delete diacritics[latin];\n\t    }\n\t  } // latin character pattern\n\t  // match longer substrings first\n\n\n\t  latin_chars = Object.keys(diacritics).sort((a, b) => b.length - a.length);\n\t  latin_pat = new RegExp('(' + escapeToPattern(latin_chars) + accent_pat + '*)', 'gu'); // build diacritic patterns\n\t  // ae needs:\n\t  //\t(?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\n\t  var diacritic_patterns = {};\n\t  latin_chars.sort((a, b) => a.length - b.length).forEach(latin => {\n\t    var substrings = allSubstrings(latin);\n\t    var pattern = substrings.map(sub_pat => {\n\t      sub_pat = sub_pat.map(l => {\n\t        if (diacritics.hasOwnProperty(l)) {\n\t          return escapeToPattern(diacritics[l]);\n\t        }\n\n\t        return l;\n\t      });\n\t      return arrayToPattern(sub_pat, '');\n\t    });\n\t    diacritic_patterns[latin] = arrayToPattern(pattern);\n\t  });\n\t  return diacritic_patterns;\n\t};\n\t/**\n\t * Expand a regular expression pattern to include diacritics\n\t * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n\t *\n\t */\n\n\tconst diacriticRegexPoints = regex => {\n\t  if (diacritic_patterns === undefined) {\n\t    diacritic_patterns = generateDiacritics(code_points);\n\t  }\n\n\t  const decomposed = regex.normalize('NFKD').toLowerCase();\n\t  return decomposed.split(latin_pat).map(part => {\n\t    // \"ﬄ\" or \"ffl\"\n\t    const no_accent = asciifold(part);\n\n\t    if (no_accent == '') {\n\t      return '';\n\t    }\n\n\t    if (diacritic_patterns.hasOwnProperty(no_accent)) {\n\t      return diacritic_patterns[no_accent];\n\t    }\n\n\t    return part;\n\t  }).join('');\n\t};\n\n\t// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\tconst getAttr = (obj, name) => {\n\t  if (!obj) return;\n\t  return obj[name];\n\t};\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\n\tconst getAttrNesting = (obj, name) => {\n\t  if (!obj) return;\n\t  var part,\n\t      names = name.split(\".\");\n\n\t  while ((part = names.shift()) && (obj = obj[part]));\n\n\t  return obj;\n\t};\n\t/**\n\t * Calculates how close of a match the\n\t * given value is against a search token.\n\t *\n\t */\n\n\tconst scoreValue = (value, token, weight) => {\n\t  var score, pos;\n\t  if (!value) return 0;\n\t  value = value + '';\n\t  pos = value.search(token.regex);\n\t  if (pos === -1) return 0;\n\t  score = token.string.length / value.length;\n\t  if (pos === 0) score += 0.5;\n\t  return score * weight;\n\t};\n\t/**\n\t *\n\t * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n\t */\n\n\tconst escape_regex = str => {\n\t  return (str + '').replace(/([\\$\\(-\\+\\.\\?\\[-\\^\\{-\\}])/g, '\\\\$1');\n\t};\n\t/**\n\t * Cast object property to an array if it exists and has a value\n\t *\n\t */\n\n\tconst propToArray = (obj, key) => {\n\t  var value = obj[key];\n\t  if (typeof value == 'function') return value;\n\n\t  if (value && !Array.isArray(value)) {\n\t    obj[key] = [value];\n\t  }\n\t};\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\n\tconst iterate = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\tconst cmp = (a, b) => {\n\t  if (typeof a === 'number' && typeof b === 'number') {\n\t    return a > b ? 1 : a < b ? -1 : 0;\n\t  }\n\n\t  a = asciifold(a + '').toLowerCase();\n\t  b = asciifold(b + '').toLowerCase();\n\t  if (a > b) return 1;\n\t  if (b > a) return -1;\n\t  return 0;\n\t};\n\n\t/**\n\t * sifter.js\n\t * Copyright (c) 2013–2020 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tclass Sifter {\n\t  // []|{};\n\n\t  /**\n\t   * Textually searches arrays and hashes of objects\n\t   * by property (or multiple properties). Designed\n\t   * specifically for autocomplete.\n\t   *\n\t   */\n\t  constructor(items, settings) {\n\t    this.items = void 0;\n\t    this.settings = void 0;\n\t    this.items = items;\n\t    this.settings = settings || {\n\t      diacritics: true\n\t    };\n\t  }\n\n\t  /**\n\t   * Splits a search string into an array of individual\n\t   * regexps to be used to match results.\n\t   *\n\t   */\n\t  tokenize(query, respect_word_boundaries, weights) {\n\t    if (!query || !query.length) return [];\n\t    const tokens = [];\n\t    const words = query.split(/\\s+/);\n\t    var field_regex;\n\n\t    if (weights) {\n\t      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n\t    }\n\n\t    words.forEach(word => {\n\t      let field_match;\n\t      let field = null;\n\t      let regex = null; // look for \"field:query\" tokens\n\n\t      if (field_regex && (field_match = word.match(field_regex))) {\n\t        field = field_match[1];\n\t        word = field_match[2];\n\t      }\n\n\t      if (word.length > 0) {\n\t        if (this.settings.diacritics) {\n\t          regex = diacriticRegexPoints(word);\n\t        } else {\n\t          regex = escape_regex(word);\n\t        }\n\n\t        if (respect_word_boundaries) regex = \"\\\\b\" + regex;\n\t      }\n\n\t      tokens.push({\n\t        string: word,\n\t        regex: regex ? new RegExp(regex, 'iu') : null,\n\t        field: field\n\t      });\n\t    });\n\t    return tokens;\n\t  }\n\n\t  /**\n\t   * Returns a function to be used to score individual results.\n\t   *\n\t   * Good matches will have a higher score than poor matches.\n\t   * If an item is not a match, 0 will be returned by the function.\n\t   *\n\t   * @returns {function}\n\t   */\n\t  getScoreFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getScoreFunction(search);\n\t  }\n\n\t  _getScoreFunction(search) {\n\t    const tokens = search.tokens,\n\t          token_count = tokens.length;\n\n\t    if (!token_count) {\n\t      return function () {\n\t        return 0;\n\t      };\n\t    }\n\n\t    const fields = search.options.fields,\n\t          weights = search.weights,\n\t          field_count = fields.length,\n\t          getAttrFn = search.getAttrFn;\n\n\t    if (!field_count) {\n\t      return function () {\n\t        return 1;\n\t      };\n\t    }\n\t    /**\n\t     * Calculates the score of an object\n\t     * against the search query.\n\t     *\n\t     */\n\n\n\t    const scoreObject = function () {\n\t      if (field_count === 1) {\n\t        return function (token, data) {\n\t          const field = fields[0].field;\n\t          return scoreValue(getAttrFn(data, field), token, weights[field]);\n\t        };\n\t      }\n\n\t      return function (token, data) {\n\t        var sum = 0; // is the token specific to a field?\n\n\t        if (token.field) {\n\t          const value = getAttrFn(data, token.field);\n\n\t          if (!token.regex && value) {\n\t            sum += 1 / field_count;\n\t          } else {\n\t            sum += scoreValue(value, token, 1);\n\t          }\n\t        } else {\n\t          iterate(weights, (weight, field) => {\n\t            sum += scoreValue(getAttrFn(data, field), token, weight);\n\t          });\n\t        }\n\n\t        return sum / field_count;\n\t      };\n\t    }();\n\n\t    if (token_count === 1) {\n\t      return function (data) {\n\t        return scoreObject(tokens[0], data);\n\t      };\n\t    }\n\n\t    if (search.options.conjunction === 'and') {\n\t      return function (data) {\n\t        var i = 0,\n\t            score,\n\t            sum = 0;\n\n\t        for (; i < token_count; i++) {\n\t          score = scoreObject(tokens[i], data);\n\t          if (score <= 0) return 0;\n\t          sum += score;\n\t        }\n\n\t        return sum / token_count;\n\t      };\n\t    } else {\n\t      return function (data) {\n\t        var sum = 0;\n\t        iterate(tokens, token => {\n\t          sum += scoreObject(token, data);\n\t        });\n\t        return sum / token_count;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns a function that can be used to compare two\n\t   * results, for sorting purposes. If no sorting should\n\t   * be performed, `null` will be returned.\n\t   *\n\t   * @return function(a,b)\n\t   */\n\t  getSortFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getSortFunction(search);\n\t  }\n\n\t  _getSortFunction(search) {\n\t    var i, n, implicit_score;\n\t    const self = this,\n\t          options = search.options,\n\t          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort,\n\t          sort_flds = [],\n\t          multipliers = [];\n\n\t    if (typeof sort == 'function') {\n\t      return sort.bind(this);\n\t    }\n\t    /**\n\t     * Fetches the specified sort field value\n\t     * from a search result item.\n\t     *\n\t     */\n\n\n\t    const get_field = function get_field(name, result) {\n\t      if (name === '$score') return result.score;\n\t      return search.getAttrFn(self.items[result.id], name);\n\t    }; // parse options\n\n\n\t    if (sort) {\n\t      for (i = 0, n = sort.length; i < n; i++) {\n\t        if (search.query || sort[i].field !== '$score') {\n\t          sort_flds.push(sort[i]);\n\t        }\n\t      }\n\t    } // the \"$score\" field is implied to be the primary\n\t    // sort field, unless it's manually specified\n\n\n\t    if (search.query) {\n\t      implicit_score = true;\n\n\t      for (i = 0, n = sort_flds.length; i < n; i++) {\n\t        if (sort_flds[i].field === '$score') {\n\t          implicit_score = false;\n\t          break;\n\t        }\n\t      }\n\n\t      if (implicit_score) {\n\t        sort_flds.unshift({\n\t          field: '$score',\n\t          direction: 'desc'\n\t        });\n\t      }\n\t    } else {\n\t      for (i = 0, n = sort_flds.length; i < n; i++) {\n\t        if (sort_flds[i].field === '$score') {\n\t          sort_flds.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\n\t    for (i = 0, n = sort_flds.length; i < n; i++) {\n\t      multipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n\t    } // build function\n\n\n\t    const sort_flds_count = sort_flds.length;\n\n\t    if (!sort_flds_count) {\n\t      return null;\n\t    } else if (sort_flds_count === 1) {\n\t      const sort_fld = sort_flds[0].field;\n\t      const multiplier = multipliers[0];\n\t      return function (a, b) {\n\t        return multiplier * cmp(get_field(sort_fld, a), get_field(sort_fld, b));\n\t      };\n\t    } else {\n\t      return function (a, b) {\n\t        var i, result, field;\n\n\t        for (i = 0; i < sort_flds_count; i++) {\n\t          field = sort_flds[i].field;\n\t          result = multipliers[i] * cmp(get_field(field, a), get_field(field, b));\n\t          if (result) return result;\n\t        }\n\n\t        return 0;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Parses a search query and returns an object\n\t   * with tokens and fields ready to be populated\n\t   * with results.\n\t   *\n\t   */\n\t  prepareSearch(query, optsUser) {\n\t    const weights = {};\n\t    var options = Object.assign({}, optsUser);\n\t    propToArray(options, 'sort');\n\t    propToArray(options, 'sort_empty'); // convert fields to new format\n\n\t    if (options.fields) {\n\t      propToArray(options, 'fields');\n\t      const fields = [];\n\t      options.fields.forEach(field => {\n\t        if (typeof field == 'string') {\n\t          field = {\n\t            field: field,\n\t            weight: 1\n\t          };\n\t        }\n\n\t        fields.push(field);\n\t        weights[field.field] = 'weight' in field ? field.weight : 1;\n\t      });\n\t      options.fields = fields;\n\t    }\n\n\t    return {\n\t      options: options,\n\t      query: query.toLowerCase().trim(),\n\t      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n\t      total: 0,\n\t      items: [],\n\t      weights: weights,\n\t      getAttrFn: options.nesting ? getAttrNesting : getAttr\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through all items and returns a sorted array of matches.\n\t   *\n\t   */\n\t  search(query, options) {\n\t    var self = this,\n\t        score,\n\t        search;\n\t    search = this.prepareSearch(query, options);\n\t    options = search.options;\n\t    query = search.query; // generate result scoring function\n\n\t    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n\t    if (query.length) {\n\t      iterate(self.items, (item, id) => {\n\t        score = fn_score(item);\n\n\t        if (options.filter === false || score > 0) {\n\t          search.items.push({\n\t            'score': score,\n\t            'id': id\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      iterate(self.items, (_, id) => {\n\t        search.items.push({\n\t          'score': 1,\n\t          'id': id\n\t        });\n\t      });\n\t    }\n\n\t    const fn_sort = self._getSortFunction(search);\n\n\t    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n\t    search.total = search.items.length;\n\n\t    if (typeof options.limit === 'number') {\n\t      search.items = search.items.slice(0, options.limit);\n\t    }\n\n\t    return search;\n\t  }\n\n\t}\n\n\t/**\n\t * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n\t * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n\t *\n\t * param query should be {}\n\t */\n\n\tconst getDom = query => {\n\t  if (query.jquery) {\n\t    return query[0];\n\t  }\n\n\t  if (query instanceof HTMLElement) {\n\t    return query;\n\t  }\n\n\t  if (isHtmlString(query)) {\n\t    let div = document.createElement('div');\n\t    div.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\n\t    return div.firstChild;\n\t  }\n\n\t  return document.querySelector(query);\n\t};\n\tconst isHtmlString = arg => {\n\t  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\tconst escapeQuery = query => {\n\t  return query.replace(/['\"\\\\]/g, '\\\\$&');\n\t};\n\t/**\n\t * Dispatch an event\n\t *\n\t */\n\n\tconst triggerEvent = (dom_el, event_name) => {\n\t  var event = document.createEvent('HTMLEvents');\n\t  event.initEvent(event_name, true, false);\n\t  dom_el.dispatchEvent(event);\n\t};\n\t/**\n\t * Apply CSS rules to a dom element\n\t *\n\t */\n\n\tconst applyCSS = (dom_el, css) => {\n\t  Object.assign(dom_el.style, css);\n\t};\n\t/**\n\t * Add css classes\n\t *\n\t */\n\n\tconst addClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.add(cls);\n\t    });\n\t  });\n\t};\n\t/**\n\t * Remove css classes\n\t *\n\t */\n\n\tconst removeClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.remove(cls);\n\t    });\n\t  });\n\t};\n\t/**\n\t * Return arguments\n\t *\n\t */\n\n\tconst classesArray = args => {\n\t  var classes = [];\n\t  iterate(args, _classes => {\n\t    if (typeof _classes === 'string') {\n\t      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t    }\n\n\t    if (Array.isArray(_classes)) {\n\t      classes = classes.concat(_classes);\n\t    }\n\t  });\n\t  return classes.filter(Boolean);\n\t};\n\t/**\n\t * Create an array from arg if it's not already an array\n\t *\n\t */\n\n\tconst castAsArray = arg => {\n\t  if (!Array.isArray(arg)) {\n\t    arg = [arg];\n\t  }\n\n\t  return arg;\n\t};\n\t/**\n\t * Get the closest node to the evt.target matching the selector\n\t * Stops at wrapper\n\t *\n\t */\n\n\tconst parentMatch = (target, selector, wrapper) => {\n\t  if (wrapper && !wrapper.contains(target)) {\n\t    return;\n\t  }\n\n\t  while (target && target.matches) {\n\t    if (target.matches(selector)) {\n\t      return target;\n\t    }\n\n\t    target = target.parentNode;\n\t  }\n\t};\n\t/**\n\t * Get the first or last item from an array\n\t *\n\t * > 0 - right (last)\n\t * <= 0 - left (first)\n\t *\n\t */\n\n\tconst getTail = (list, direction = 0) => {\n\t  if (direction > 0) {\n\t    return list[list.length - 1];\n\t  }\n\n\t  return list[0];\n\t};\n\t/**\n\t * Return true if an object is empty\n\t *\n\t */\n\n\tconst isEmptyObject = obj => {\n\t  return Object.keys(obj).length === 0;\n\t};\n\t/**\n\t * Get the index of an element amongst sibling nodes of the same type\n\t *\n\t */\n\n\tconst nodeIndex = (el, amongst) => {\n\t  if (!el) return -1;\n\t  amongst = amongst || el.nodeName;\n\t  var i = 0;\n\n\t  while (el = el.previousElementSibling) {\n\t    if (el.matches(amongst)) {\n\t      i++;\n\t    }\n\t  }\n\n\t  return i;\n\t};\n\t/**\n\t * Set attributes of an element\n\t *\n\t */\n\n\tconst setAttr = (el, attrs) => {\n\t  iterate(attrs, (val, attr) => {\n\t    if (val == null) {\n\t      el.removeAttribute(attr);\n\t    } else {\n\t      el.setAttribute(attr, '' + val);\n\t    }\n\t  });\n\t};\n\t/**\n\t * Replace a node\n\t */\n\n\tconst replaceNode = (existing, replacement) => {\n\t  if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n\t};\n\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\tconst highlight = (element, regex) => {\n\t  if (regex === null) return; // convet string to regex\n\n\t  if (typeof regex === 'string') {\n\t    if (!regex.length) return;\n\t    regex = new RegExp(regex, 'i');\n\t  } // Wrap matching part of text node with highlighting <span>, e.g.\n\t  // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\n\n\t  const highlightText = node => {\n\t    var match = node.data.match(regex);\n\n\t    if (match && node.data.length > 0) {\n\t      var spannode = document.createElement('span');\n\t      spannode.className = 'highlight';\n\t      var middlebit = node.splitText(match.index);\n\t      middlebit.splitText(match[0].length);\n\t      var middleclone = middlebit.cloneNode(true);\n\t      spannode.appendChild(middleclone);\n\t      replaceNode(middlebit, spannode);\n\t      return 1;\n\t    }\n\n\t    return 0;\n\t  }; // Recurse element node, looking for child text nodes to highlight, unless element\n\t  // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\n\n\t  const highlightChildren = node => {\n\t    if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n\t      for (var i = 0; i < node.childNodes.length; ++i) {\n\t        i += highlightRecursive(node.childNodes[i]);\n\t      }\n\t    }\n\t  };\n\n\t  const highlightRecursive = node => {\n\t    if (node.nodeType === 3) {\n\t      return highlightText(node);\n\t    }\n\n\t    highlightChildren(node);\n\t    return 0;\n\t  };\n\n\t  highlightRecursive(element);\n\t};\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with(), pass js strict mode, and use without jquery\n\t */\n\n\tconst removeHighlight = el => {\n\t  var elements = el.querySelectorAll(\"span.highlight\");\n\t  Array.prototype.forEach.call(elements, function (el) {\n\t    var parent = el.parentNode;\n\t    parent.replaceChild(el.firstChild, el);\n\t    parent.normalize();\n\t  });\n\t};\n\n\tconst KEY_A = 65;\n\tconst KEY_RETURN = 13;\n\tconst KEY_ESC = 27;\n\tconst KEY_LEFT = 37;\n\tconst KEY_UP = 38;\n\tconst KEY_RIGHT = 39;\n\tconst KEY_DOWN = 40;\n\tconst KEY_BACKSPACE = 8;\n\tconst KEY_DELETE = 46;\n\tconst KEY_TAB = 9;\n\tconst IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n\tconst KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n\tvar defaults = {\n\t  options: [],\n\t  optgroups: [],\n\t  plugins: [],\n\t  delimiter: ',',\n\t  splitOn: null,\n\t  // regexp or string for splitting up values from a paste command\n\t  persist: true,\n\t  diacritics: true,\n\t  create: null,\n\t  createOnBlur: false,\n\t  createFilter: null,\n\t  highlight: true,\n\t  openOnFocus: true,\n\t  shouldOpen: null,\n\t  maxOptions: 50,\n\t  maxItems: null,\n\t  hideSelected: null,\n\t  duplicates: false,\n\t  addPrecedence: false,\n\t  selectOnTab: false,\n\t  preload: null,\n\t  allowEmptyOption: false,\n\t  //closeAfterSelect: false,\n\t  loadThrottle: 300,\n\t  loadingClass: 'loading',\n\t  dataAttr: null,\n\t  //'data-data',\n\t  optgroupField: 'optgroup',\n\t  valueField: 'value',\n\t  labelField: 'text',\n\t  disabledField: 'disabled',\n\t  optgroupLabelField: 'label',\n\t  optgroupValueField: 'value',\n\t  lockOptgroupOrder: false,\n\t  sortField: '$order',\n\t  searchField: ['text'],\n\t  searchConjunction: 'and',\n\t  mode: null,\n\t  wrapperClass: 'ts-wrapper',\n\t  controlClass: 'ts-control',\n\t  dropdownClass: 'ts-dropdown',\n\t  dropdownContentClass: 'ts-dropdown-content',\n\t  itemClass: 'item',\n\t  optionClass: 'option',\n\t  dropdownParent: null,\n\t  controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\t  copyClassesToDropdown: false,\n\t  placeholder: null,\n\t  hidePlaceholder: null,\n\t  shouldLoad: function (query) {\n\t    return query.length > 0;\n\t  },\n\n\t  /*\n\t  load                 : null, // function(query, callback) { ... }\n\t  score                : null, // function(search) { ... }\n\t  onInitialize         : null, // function() { ... }\n\t  onChange             : null, // function(value) { ... }\n\t  onItemAdd            : null, // function(value, $item) { ... }\n\t  onItemRemove         : null, // function(value) { ... }\n\t  onClear              : null, // function() { ... }\n\t  onOptionAdd          : null, // function(value, data) { ... }\n\t  onOptionRemove       : null, // function(value) { ... }\n\t  onOptionClear        : null, // function() { ... }\n\t  onOptionGroupAdd     : null, // function(id, data) { ... }\n\t  onOptionGroupRemove  : null, // function(id) { ... }\n\t  onOptionGroupClear   : null, // function() { ... }\n\t  onDropdownOpen       : null, // function(dropdown) { ... }\n\t  onDropdownClose      : null, // function(dropdown) { ... }\n\t  onType               : null, // function(str) { ... }\n\t  onDelete             : null, // function(values) { ... }\n\t  */\n\t  render: {\n\t    /*\n\t    item: null,\n\t    optgroup: null,\n\t    optgroup_header: null,\n\t    option: null,\n\t    option_create: null\n\t    */\n\t  }\n\t};\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t */\n\tconst hash_key = value => {\n\t  if (typeof value === 'undefined' || value === null) return null;\n\t  return get_hash(value);\n\t};\n\tconst get_hash = value => {\n\t  if (typeof value === 'boolean') return value ? '1' : '0';\n\t  return value + '';\n\t};\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t */\n\n\tconst escape_html = str => {\n\t  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\t};\n\t/**\n\t * Debounce the user provided load function\n\t *\n\t */\n\n\tconst loadDebounce = (fn, delay) => {\n\t  var timeout;\n\t  return function (value, callback) {\n\t    var self = this;\n\n\t    if (timeout) {\n\t      self.loading = Math.max(self.loading - 1, 0);\n\t      clearTimeout(timeout);\n\t    }\n\n\t    timeout = setTimeout(function () {\n\t      timeout = null;\n\t      self.loadedSearches[value] = true;\n\t      fn.call(self, value, callback);\n\t    }, delay);\n\t  };\n\t};\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t */\n\n\tconst debounce_events = (self, types, fn) => {\n\t  var type;\n\t  var trigger = self.trigger;\n\t  var event_args = {}; // override trigger method\n\n\t  self.trigger = function () {\n\t    var type = arguments[0];\n\n\t    if (types.indexOf(type) !== -1) {\n\t      event_args[type] = arguments;\n\t    } else {\n\t      return trigger.apply(self, arguments);\n\t    }\n\t  }; // invoke provided function\n\n\n\t  fn.apply(self, []);\n\t  self.trigger = trigger; // trigger queued events\n\n\t  for (type of types) {\n\t    if (type in event_args) {\n\t      trigger.apply(self, event_args[type]);\n\t    }\n\t  }\n\t};\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t */\n\n\tconst getSelection = input => {\n\t  return {\n\t    start: input.selectionStart || 0,\n\t    length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n\t  };\n\t};\n\t/**\n\t * Prevent default\n\t *\n\t */\n\n\tconst preventDefault = (evt, stop = false) => {\n\t  if (evt) {\n\t    evt.preventDefault();\n\n\t    if (stop) {\n\t      evt.stopPropagation();\n\t    }\n\t  }\n\t};\n\t/**\n\t * Prevent default\n\t *\n\t */\n\n\tconst addEvent = (target, type, callback, options) => {\n\t  target.addEventListener(type, callback, options);\n\t};\n\t/**\n\t * Return true if the requested key is down\n\t * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n\t * The current evt may not always set ( eg calling advanceSelection() )\n\t *\n\t */\n\n\tconst isKeyDown = (key_name, evt) => {\n\t  if (!evt) {\n\t    return false;\n\t  }\n\n\t  if (!evt[key_name]) {\n\t    return false;\n\t  }\n\n\t  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n\n\t  if (count === 1) {\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\t/**\n\t * Get the id of an element\n\t * If the id attribute is not set, set the attribute with the given id\n\t *\n\t */\n\n\tconst getId = (el, id) => {\n\t  const existing_id = el.getAttribute('id');\n\n\t  if (existing_id) {\n\t    return existing_id;\n\t  }\n\n\t  el.setAttribute('id', id);\n\t  return id;\n\t};\n\t/**\n\t * Returns a string with backslashes added before characters that need to be escaped.\n\t */\n\n\tconst addSlashes = str => {\n\t  return str.replace(/[\\\\\"']/g, '\\\\$&');\n\t};\n\t/**\n\t *\n\t */\n\n\tconst append = (parent, node) => {\n\t  if (node) parent.append(node);\n\t};\n\n\tfunction getSettings(input, settings_user) {\n\t  var settings = Object.assign({}, defaults, settings_user);\n\t  var attr_data = settings.dataAttr;\n\t  var field_label = settings.labelField;\n\t  var field_value = settings.valueField;\n\t  var field_disabled = settings.disabledField;\n\t  var field_optgroup = settings.optgroupField;\n\t  var field_optgroup_label = settings.optgroupLabelField;\n\t  var field_optgroup_value = settings.optgroupValueField;\n\t  var tag_name = input.tagName.toLowerCase();\n\t  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\t  if (!placeholder && !settings.allowEmptyOption) {\n\t    let option = input.querySelector('option[value=\"\"]');\n\n\t    if (option) {\n\t      placeholder = option.textContent;\n\t    }\n\t  }\n\n\t  var settings_element = {\n\t    placeholder: placeholder,\n\t    options: [],\n\t    optgroups: [],\n\t    items: [],\n\t    maxItems: null\n\t  };\n\t  /**\n\t   * Initialize from a <select> element.\n\t   *\n\t   */\n\n\t  var init_select = () => {\n\t    var tagName;\n\t    var options = settings_element.options;\n\t    var optionsMap = {};\n\t    var group_count = 1;\n\n\t    var readData = el => {\n\t      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n\n\t      var json = attr_data && data[attr_data];\n\n\t      if (typeof json === 'string' && json.length) {\n\t        data = Object.assign(data, JSON.parse(json));\n\t      }\n\n\t      return data;\n\t    };\n\n\t    var addOption = (option, group) => {\n\t      var value = hash_key(option.value);\n\t      if (value == null) return;\n\t      if (!value && !settings.allowEmptyOption) return; // if the option already exists, it's probably been\n\t      // duplicated in another optgroup. in this case, push\n\t      // the current group to the \"optgroup\" property on the\n\t      // existing option so that it's rendered in both places.\n\n\t      if (optionsMap.hasOwnProperty(value)) {\n\t        if (group) {\n\t          var arr = optionsMap[value][field_optgroup];\n\n\t          if (!arr) {\n\t            optionsMap[value][field_optgroup] = group;\n\t          } else if (!Array.isArray(arr)) {\n\t            optionsMap[value][field_optgroup] = [arr, group];\n\t          } else {\n\t            arr.push(group);\n\t          }\n\t        }\n\t      } else {\n\t        var option_data = readData(option);\n\t        option_data[field_label] = option_data[field_label] || option.textContent;\n\t        option_data[field_value] = option_data[field_value] || value;\n\t        option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t        option_data[field_optgroup] = option_data[field_optgroup] || group;\n\t        option_data.$option = option;\n\t        optionsMap[value] = option_data;\n\t        options.push(option_data);\n\t      }\n\n\t      if (option.selected) {\n\t        settings_element.items.push(value);\n\t      }\n\t    };\n\n\t    var addGroup = optgroup => {\n\t      var id, optgroup_data;\n\t      optgroup_data = readData(optgroup);\n\t      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n\t      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n\t      settings_element.optgroups.push(optgroup_data);\n\t      id = optgroup_data[field_optgroup_value];\n\t      iterate(optgroup.children, option => {\n\t        addOption(option, id);\n\t      });\n\t    };\n\n\t    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\t    iterate(input.children, child => {\n\t      tagName = child.tagName.toLowerCase();\n\n\t      if (tagName === 'optgroup') {\n\t        addGroup(child);\n\t      } else if (tagName === 'option') {\n\t        addOption(child);\n\t      }\n\t    });\n\t  };\n\t  /**\n\t   * Initialize from a <input type=\"text\"> element.\n\t   *\n\t   */\n\n\n\t  var init_textbox = () => {\n\t    const data_raw = input.getAttribute(attr_data);\n\n\t    if (!data_raw) {\n\t      var value = input.value.trim() || '';\n\t      if (!settings.allowEmptyOption && !value.length) return;\n\t      const values = value.split(settings.delimiter);\n\t      iterate(values, value => {\n\t        const option = {};\n\t        option[field_label] = value;\n\t        option[field_value] = value;\n\t        settings_element.options.push(option);\n\t      });\n\t      settings_element.items = values;\n\t    } else {\n\t      settings_element.options = JSON.parse(data_raw);\n\t      iterate(settings_element.options, opt => {\n\t        settings_element.items.push(opt[field_value]);\n\t      });\n\t    }\n\t  };\n\n\t  if (tag_name === 'select') {\n\t    init_select();\n\t  } else {\n\t    init_textbox();\n\t  }\n\n\t  return Object.assign({}, defaults, settings_element, settings_user);\n\t}\n\n\tvar instance_i = 0;\n\tclass TomSelect extends MicroPlugin(MicroEvent) {\n\t  // @deprecated 1.8\n\t  constructor(input_arg, user_settings) {\n\t    super();\n\t    this.control_input = void 0;\n\t    this.wrapper = void 0;\n\t    this.dropdown = void 0;\n\t    this.control = void 0;\n\t    this.dropdown_content = void 0;\n\t    this.focus_node = void 0;\n\t    this.order = 0;\n\t    this.settings = void 0;\n\t    this.input = void 0;\n\t    this.tabIndex = void 0;\n\t    this.is_select_tag = void 0;\n\t    this.rtl = void 0;\n\t    this.inputId = void 0;\n\t    this._destroy = void 0;\n\t    this.sifter = void 0;\n\t    this.isOpen = false;\n\t    this.isDisabled = false;\n\t    this.isRequired = void 0;\n\t    this.isInvalid = false;\n\t    this.isValid = true;\n\t    this.isLocked = false;\n\t    this.isFocused = false;\n\t    this.isInputHidden = false;\n\t    this.isSetup = false;\n\t    this.ignoreFocus = false;\n\t    this.ignoreHover = false;\n\t    this.hasOptions = false;\n\t    this.currentResults = void 0;\n\t    this.lastValue = '';\n\t    this.caretPos = 0;\n\t    this.loading = 0;\n\t    this.loadedSearches = {};\n\t    this.activeOption = null;\n\t    this.activeItems = [];\n\t    this.optgroups = {};\n\t    this.options = {};\n\t    this.userOptions = {};\n\t    this.items = [];\n\t    instance_i++;\n\t    var dir;\n\t    var input = getDom(input_arg);\n\n\t    if (input.tomselect) {\n\t      throw new Error('Tom Select already initialized on this element');\n\t    }\n\n\t    input.tomselect = this; // detect rtl environment\n\n\t    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t    dir = computedStyle.getPropertyValue('direction'); // setup default state\n\n\t    const settings = getSettings(input, user_settings);\n\t    this.settings = settings;\n\t    this.input = input;\n\t    this.tabIndex = input.tabIndex || 0;\n\t    this.is_select_tag = input.tagName.toLowerCase() === 'select';\n\t    this.rtl = /rtl/i.test(dir);\n\t    this.inputId = getId(input, 'tomselect-' + instance_i);\n\t    this.isRequired = input.required; // search system\n\n\t    this.sifter = new Sifter(this.options, {\n\t      diacritics: settings.diacritics\n\t    }); // option-dependent defaults\n\n\t    settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\n\t    if (typeof settings.hideSelected !== 'boolean') {\n\t      settings.hideSelected = settings.mode === 'multi';\n\t    }\n\n\t    if (typeof settings.hidePlaceholder !== 'boolean') {\n\t      settings.hidePlaceholder = settings.mode !== 'multi';\n\t    } // set up createFilter callback\n\n\n\t    var filter = settings.createFilter;\n\n\t    if (typeof filter !== 'function') {\n\t      if (typeof filter === 'string') {\n\t        filter = new RegExp(filter);\n\t      }\n\n\t      if (filter instanceof RegExp) {\n\t        settings.createFilter = input => filter.test(input);\n\t      } else {\n\t        settings.createFilter = value => {\n\t          return this.settings.duplicates || !this.options[value];\n\t        };\n\t      }\n\t    }\n\n\t    this.initializePlugins(settings.plugins);\n\t    this.setupCallbacks();\n\t    this.setupTemplates(); // Create all elements\n\n\t    const wrapper = getDom('<div>');\n\t    const control = getDom('<div>');\n\n\t    const dropdown = this._render('dropdown');\n\n\t    const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\t    const classes = this.input.getAttribute('class') || '';\n\t    const inputMode = settings.mode;\n\t    var control_input;\n\t    addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n\t    addClasses(control, settings.controlClass);\n\t    append(wrapper, control);\n\t    addClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t    if (settings.copyClassesToDropdown) {\n\t      addClasses(dropdown, classes);\n\t    }\n\n\t    addClasses(dropdown_content, settings.dropdownContentClass);\n\t    append(dropdown, dropdown_content);\n\t    getDom(settings.dropdownParent || wrapper).appendChild(dropdown); // default controlInput\n\n\t    if (isHtmlString(settings.controlInput)) {\n\t      control_input = getDom(settings.controlInput); // set attributes\n\n\t      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete'];\n\t      iterate(attrs, attr => {\n\t        if (input.getAttribute(attr)) {\n\t          setAttr(control_input, {\n\t            [attr]: input.getAttribute(attr)\n\t          });\n\t        }\n\t      });\n\t      control_input.tabIndex = -1;\n\t      control.appendChild(control_input);\n\t      this.focus_node = control_input; // dom element\n\t    } else if (settings.controlInput) {\n\t      control_input = getDom(settings.controlInput);\n\t      this.focus_node = control_input;\n\t    } else {\n\t      control_input = getDom('<input/>');\n\t      this.focus_node = control;\n\t    }\n\n\t    this.wrapper = wrapper;\n\t    this.dropdown = dropdown;\n\t    this.dropdown_content = dropdown_content;\n\t    this.control = control;\n\t    this.control_input = control_input;\n\t    this.setup();\n\t  }\n\t  /**\n\t   * set up event bindings.\n\t   *\n\t   */\n\n\n\t  setup() {\n\t    const self = this;\n\t    const settings = self.settings;\n\t    const control_input = self.control_input;\n\t    const dropdown = self.dropdown;\n\t    const dropdown_content = self.dropdown_content;\n\t    const wrapper = self.wrapper;\n\t    const control = self.control;\n\t    const input = self.input;\n\t    const focus_node = self.focus_node;\n\t    const passive_event = {\n\t      passive: true\n\t    };\n\t    const listboxId = self.inputId + '-ts-dropdown';\n\t    setAttr(dropdown_content, {\n\t      id: listboxId\n\t    });\n\t    setAttr(focus_node, {\n\t      role: 'combobox',\n\t      'aria-haspopup': 'listbox',\n\t      'aria-expanded': 'false',\n\t      'aria-controls': listboxId\n\t    });\n\t    const control_id = getId(focus_node, self.inputId + '-ts-control');\n\t    const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n\t    const label = document.querySelector(query);\n\t    const label_click = self.focus.bind(self);\n\n\t    if (label) {\n\t      addEvent(label, 'click', label_click);\n\t      setAttr(label, {\n\t        for: control_id\n\t      });\n\t      const label_id = getId(label, self.inputId + '-ts-label');\n\t      setAttr(focus_node, {\n\t        'aria-labelledby': label_id\n\t      });\n\t      setAttr(dropdown_content, {\n\t        'aria-labelledby': label_id\n\t      });\n\t    }\n\n\t    wrapper.style.width = input.style.width;\n\n\t    if (self.plugins.names.length) {\n\t      const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t      addClasses([wrapper, dropdown], classes_plugins);\n\t    }\n\n\t    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n\t      setAttr(input, {\n\t        multiple: 'multiple'\n\t      });\n\t    }\n\n\t    if (settings.placeholder) {\n\t      setAttr(control_input, {\n\t        placeholder: settings.placeholder\n\t      });\n\t    } // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\n\n\t    if (!settings.splitOn && settings.delimiter) {\n\t      settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t    } // debounce user defined load() if loadThrottle > 0\n\t    // after initializePlugins() so plugins can create/modify user defined loaders\n\n\n\t    if (settings.load && settings.loadThrottle) {\n\t      settings.load = loadDebounce(settings.load, settings.loadThrottle);\n\t    }\n\n\t    self.control_input.type = input.type;\n\t    addEvent(dropdown, 'mouseenter', e => {\n\t      var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n\t      if (target_match) self.onOptionHover(e, target_match);\n\t    }, {\n\t      capture: true\n\t    }); // clicking on an option should select it\n\n\t    addEvent(dropdown, 'click', evt => {\n\t      const option = parentMatch(evt.target, '[data-selectable]');\n\n\t      if (option) {\n\t        self.onOptionSelect(evt, option);\n\t        preventDefault(evt, true);\n\t      }\n\t    });\n\t    addEvent(control, 'click', evt => {\n\t      var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n\n\t      if (target_match && self.onItemSelect(evt, target_match)) {\n\t        preventDefault(evt, true);\n\t        return;\n\t      } // retain focus (see control_input mousedown)\n\n\n\t      if (control_input.value != '') {\n\t        return;\n\t      }\n\n\t      self.onClick();\n\t      preventDefault(evt, true);\n\t    }); // keydown on focus_node for arrow_down/arrow_up\n\n\t    addEvent(focus_node, 'keydown', e => self.onKeyDown(e)); // keypress and input/keyup\n\n\t    addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n\t    addEvent(control_input, 'input', e => self.onInput(e));\n\t    addEvent(focus_node, 'resize', () => self.positionDropdown(), passive_event);\n\t    addEvent(focus_node, 'blur', e => self.onBlur(e));\n\t    addEvent(focus_node, 'focus', e => self.onFocus(e));\n\t    addEvent(control_input, 'paste', e => self.onPaste(e));\n\n\t    const doc_mousedown = evt => {\n\t      // blur if target is outside of this instance\n\t      // dropdown is not always inside wrapper\n\t      const target = evt.composedPath()[0];\n\n\t      if (!wrapper.contains(target) && !dropdown.contains(target)) {\n\t        if (self.isFocused) {\n\t          self.blur();\n\t        }\n\n\t        self.inputState();\n\t        return;\n\t      } // retain focus by preventing native handling. if the\n\t      // event target is the input it should not be modified.\n\t      // otherwise, text selection within the input won't work.\n\t      // Fixes bug #212 which is no covered by tests\n\n\n\t      if (target == control_input && self.isOpen) {\n\t        evt.stopPropagation(); // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t      } else {\n\t        preventDefault(evt, true);\n\t      }\n\t    };\n\n\t    const win_scroll = () => {\n\t      if (self.isOpen) {\n\t        self.positionDropdown();\n\t      }\n\t    };\n\n\t    const win_hover = () => {\n\t      self.ignoreHover = false;\n\t    };\n\n\t    addEvent(document, 'mousedown', doc_mousedown);\n\t    addEvent(window, 'scroll', win_scroll, passive_event);\n\t    addEvent(window, 'resize', win_scroll, passive_event);\n\t    addEvent(window, 'mousemove', win_hover, passive_event);\n\n\t    this._destroy = () => {\n\t      document.removeEventListener('mousedown', doc_mousedown);\n\t      window.removeEventListener('mousemove', win_hover);\n\t      window.removeEventListener('scroll', win_scroll);\n\t      window.removeEventListener('resize', win_scroll);\n\t      if (label) label.removeEventListener('click', label_click);\n\t    }; // store original html and tab index so that they can be\n\t    // restored when the destroy() method is called.\n\n\n\t    this.revertSettings = {\n\t      innerHTML: input.innerHTML,\n\t      tabIndex: input.tabIndex\n\t    };\n\t    input.tabIndex = -1;\n\t    input.insertAdjacentElement('afterend', self.wrapper);\n\t    self.sync(false);\n\t    settings.items = [];\n\t    delete settings.optgroups;\n\t    delete settings.options;\n\t    addEvent(input, 'invalid', e => {\n\t      if (self.isValid) {\n\t        self.isValid = false;\n\t        self.isInvalid = true;\n\t        self.refreshState();\n\t      }\n\t    });\n\t    self.updateOriginalInput();\n\t    self.refreshItems();\n\t    self.close(false);\n\t    self.inputState();\n\t    self.isSetup = true;\n\n\t    if (input.disabled) {\n\t      self.disable();\n\t    } else {\n\t      self.enable(); //sets tabIndex\n\t    }\n\n\t    self.on('change', this.onChange);\n\t    addClasses(input, 'tomselected', 'ts-hidden-accessible');\n\t    self.trigger('initialize'); // preload options\n\n\t    if (settings.preload === true) {\n\t      self.preload();\n\t    }\n\t  }\n\t  /**\n\t   * Register options and optgroups\n\t   *\n\t   */\n\n\n\t  setupOptions(options = [], optgroups = []) {\n\t    // build options table\n\t    this.addOptions(options); // build optgroup table\n\n\t    iterate(optgroups, optgroup => {\n\t      this.registerOptionGroup(optgroup);\n\t    });\n\t  }\n\t  /**\n\t   * Sets up default rendering functions.\n\t   */\n\n\n\t  setupTemplates() {\n\t    var self = this;\n\t    var field_label = self.settings.labelField;\n\t    var field_optgroup = self.settings.optgroupLabelField;\n\t    var templates = {\n\t      'optgroup': data => {\n\t        let optgroup = document.createElement('div');\n\t        optgroup.className = 'optgroup';\n\t        optgroup.appendChild(data.options);\n\t        return optgroup;\n\t      },\n\t      'optgroup_header': (data, escape) => {\n\t        return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t      },\n\t      'option': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'item': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'option_create': (data, escape) => {\n\t        return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t      },\n\t      'no_results': () => {\n\t        return '<div class=\"no-results\">No results found</div>';\n\t      },\n\t      'loading': () => {\n\t        return '<div class=\"spinner\"></div>';\n\t      },\n\t      'not_loading': () => {},\n\t      'dropdown': () => {\n\t        return '<div></div>';\n\t      }\n\t    };\n\t    self.settings.render = Object.assign({}, templates, self.settings.render);\n\t  }\n\t  /**\n\t   * Maps fired events to callbacks provided\n\t   * in the settings used when creating the control.\n\t   */\n\n\n\t  setupCallbacks() {\n\t    var key, fn;\n\t    var callbacks = {\n\t      'initialize': 'onInitialize',\n\t      'change': 'onChange',\n\t      'item_add': 'onItemAdd',\n\t      'item_remove': 'onItemRemove',\n\t      'item_select': 'onItemSelect',\n\t      'clear': 'onClear',\n\t      'option_add': 'onOptionAdd',\n\t      'option_remove': 'onOptionRemove',\n\t      'option_clear': 'onOptionClear',\n\t      'optgroup_add': 'onOptionGroupAdd',\n\t      'optgroup_remove': 'onOptionGroupRemove',\n\t      'optgroup_clear': 'onOptionGroupClear',\n\t      'dropdown_open': 'onDropdownOpen',\n\t      'dropdown_close': 'onDropdownClose',\n\t      'type': 'onType',\n\t      'load': 'onLoad',\n\t      'focus': 'onFocus',\n\t      'blur': 'onBlur'\n\t    };\n\n\t    for (key in callbacks) {\n\t      fn = this.settings[callbacks[key]];\n\t      if (fn) this.on(key, fn);\n\t    }\n\t  }\n\t  /**\n\t   * Sync the Tom Select instance with the original input or select\n\t   *\n\t   */\n\n\n\t  sync(get_settings = true) {\n\t    const self = this;\n\t    const settings = get_settings ? getSettings(self.input, {\n\t      delimiter: self.settings.delimiter\n\t    }) : self.settings;\n\t    self.setupOptions(settings.options, settings.optgroups);\n\t    self.setValue(settings.items || [], true); // silent prevents recursion\n\n\t    self.lastQuery = null; // so updated options will be displayed in dropdown\n\t  }\n\t  /**\n\t   * Triggered when the main control element\n\t   * has a click event.\n\t   *\n\t   */\n\n\n\t  onClick() {\n\t    var self = this;\n\n\t    if (self.activeItems.length > 0) {\n\t      self.clearActiveItems();\n\t      self.focus();\n\t      return;\n\t    }\n\n\t    if (self.isFocused && self.isOpen) {\n\t      self.blur();\n\t    } else {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * @deprecated v1.7\n\t   *\n\t   */\n\n\n\t  onMouseDown() {}\n\t  /**\n\t   * Triggered when the value of the control has been changed.\n\t   * This should propagate the event to the original DOM\n\t   * input / select element.\n\t   */\n\n\n\t  onChange() {\n\t    triggerEvent(this.input, 'input');\n\t    triggerEvent(this.input, 'change');\n\t  }\n\t  /**\n\t   * Triggered on <input> paste.\n\t   *\n\t   */\n\n\n\t  onPaste(e) {\n\t    var self = this;\n\n\t    if (self.isInputHidden || self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    } // If a regex or string is included, this will split the pasted\n\t    // input and create Items for each separate value\n\n\n\t    if (!self.settings.splitOn) {\n\t      return;\n\t    } // Wait for pasted text to be recognized in value\n\n\n\t    setTimeout(() => {\n\t      var pastedText = self.inputValue();\n\n\t      if (!pastedText.match(self.settings.splitOn)) {\n\t        return;\n\t      }\n\n\t      var splitInput = pastedText.trim().split(self.settings.splitOn);\n\t      iterate(splitInput, piece => {\n\t        piece = hash_key(piece);\n\n\t        if (this.options[piece]) {\n\t          self.addItem(piece);\n\t        } else {\n\t          self.createItem(piece);\n\t        }\n\t      });\n\t    }, 0);\n\t  }\n\t  /**\n\t   * Triggered on <input> keypress.\n\t   *\n\t   */\n\n\n\t  onKeyPress(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    var character = String.fromCharCode(e.keyCode || e.which);\n\n\t    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t      self.createItem();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keydown.\n\t   *\n\t   */\n\n\n\t  onKeyDown(e) {\n\t    var self = this;\n\t    self.ignoreHover = true;\n\n\t    if (self.isLocked) {\n\t      if (e.keyCode !== KEY_TAB) {\n\t        preventDefault(e);\n\t      }\n\n\t      return;\n\t    }\n\n\t    switch (e.keyCode) {\n\t      // ctrl+A: select all\n\t      case KEY_A:\n\t        if (isKeyDown(KEY_SHORTCUT, e)) {\n\t          if (self.control_input.value == '') {\n\t            preventDefault(e);\n\t            self.selectAll();\n\t            return;\n\t          }\n\t        }\n\n\t        break;\n\t      // esc: close dropdown\n\n\t      case KEY_ESC:\n\t        if (self.isOpen) {\n\t          preventDefault(e, true);\n\t          self.close();\n\t        }\n\n\t        self.clearActiveItems();\n\t        return;\n\t      // down: open dropdown or move selection down\n\n\t      case KEY_DOWN:\n\t        if (!self.isOpen && self.hasOptions) {\n\t          self.open();\n\t        } else if (self.activeOption) {\n\t          let next = self.getAdjacent(self.activeOption, 1);\n\t          if (next) self.setActiveOption(next);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // up: move selection up\n\n\t      case KEY_UP:\n\t        if (self.activeOption) {\n\t          let prev = self.getAdjacent(self.activeOption, -1);\n\t          if (prev) self.setActiveOption(prev);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // return: select active option\n\n\t      case KEY_RETURN:\n\t        if (self.canSelect(self.activeOption)) {\n\t          self.onOptionSelect(e, self.activeOption);\n\t          preventDefault(e); // if the option_create=null, the dropdown might be closed\n\t        } else if (self.settings.create && self.createItem()) {\n\t          preventDefault(e); // don't submit form when searching for a value\n\t        } else if (document.activeElement == self.control_input && self.isOpen) {\n\t          preventDefault(e);\n\t        }\n\n\t        return;\n\t      // left: modifiy item selection to the left\n\n\t      case KEY_LEFT:\n\t        self.advanceSelection(-1, e);\n\t        return;\n\t      // right: modifiy item selection to the right\n\n\t      case KEY_RIGHT:\n\t        self.advanceSelection(1, e);\n\t        return;\n\t      // tab: select active option and/or create item\n\n\t      case KEY_TAB:\n\t        if (self.settings.selectOnTab) {\n\t          if (self.canSelect(self.activeOption)) {\n\t            self.onOptionSelect(e, self.activeOption); // prevent default [tab] behaviour of jump to the next field\n\t            // if select isFull, then the dropdown won't be open and [tab] will work normally\n\n\t            preventDefault(e);\n\t          }\n\n\t          if (self.settings.create && self.createItem()) {\n\t            preventDefault(e);\n\t          }\n\t        }\n\n\t        return;\n\t      // delete|backspace: delete items\n\n\t      case KEY_BACKSPACE:\n\t      case KEY_DELETE:\n\t        self.deleteSelection(e);\n\t        return;\n\t    } // don't enter text in the control_input when active items are selected\n\n\n\t    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n\t      preventDefault(e);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keyup.\n\t   *\n\t   */\n\n\n\t  onInput(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      return;\n\t    }\n\n\t    var value = self.inputValue();\n\n\t    if (self.lastValue !== value) {\n\t      self.lastValue = value;\n\n\t      if (self.settings.shouldLoad.call(self, value)) {\n\t        self.load(value);\n\t      }\n\n\t      self.refreshOptions();\n\t      self.trigger('type', value);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the user rolls over\n\t   * an option in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  onOptionHover(evt, option) {\n\t    if (this.ignoreHover) return;\n\t    this.setActiveOption(option, false);\n\t  }\n\t  /**\n\t   * Triggered on <input> focus.\n\t   *\n\t   */\n\n\n\t  onFocus(e) {\n\t    var self = this;\n\t    var wasFocused = self.isFocused;\n\n\t    if (self.isDisabled) {\n\t      self.blur();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    if (self.ignoreFocus) return;\n\t    self.isFocused = true;\n\t    if (self.settings.preload === 'focus') self.preload();\n\t    if (!wasFocused) self.trigger('focus');\n\n\t    if (!self.activeItems.length) {\n\t      self.showInput();\n\t      self.refreshOptions(!!self.settings.openOnFocus);\n\t    }\n\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Triggered on <input> blur.\n\t   *\n\t   */\n\n\n\t  onBlur(e) {\n\t    if (document.hasFocus() === false) return;\n\t    var self = this;\n\t    if (!self.isFocused) return;\n\t    self.isFocused = false;\n\t    self.ignoreFocus = false;\n\n\t    var deactivate = () => {\n\t      self.close();\n\t      self.setActiveItem();\n\t      self.setCaret(self.items.length);\n\t      self.trigger('blur');\n\t    };\n\n\t    if (self.settings.create && self.settings.createOnBlur) {\n\t      self.createItem(null, false, deactivate);\n\t    } else {\n\t      deactivate();\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an option\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  onOptionSelect(evt, option) {\n\t    var value,\n\t        self = this; // should not be possible to trigger a option under a disabled optgroup\n\n\t    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n\t      return;\n\t    }\n\n\t    if (option.classList.contains('create')) {\n\t      self.createItem(null, true, () => {\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t      });\n\t    } else {\n\t      value = option.dataset.value;\n\n\t      if (typeof value !== 'undefined') {\n\t        self.lastQuery = null;\n\t        self.addItem(value);\n\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\n\t        if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n\t          self.setActiveOption(option);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Return true if the given option can be selected\n\t   *\n\t   */\n\n\n\t  canSelect(option) {\n\t    if (this.isOpen && option && this.dropdown_content.contains(option)) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an item\n\t   * that has been selected.\n\t   *\n\t   */\n\n\n\t  onItemSelect(evt, item) {\n\t    var self = this;\n\n\t    if (!self.isLocked && self.settings.mode === 'multi') {\n\t      preventDefault(evt);\n\t      self.setActiveItem(item, evt);\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Determines whether or not to invoke\n\t   * the user-provided option provider / loader\n\t   *\n\t   * Note, there is a subtle difference between\n\t   * this.canLoad() and this.settings.shouldLoad();\n\t   *\n\t   *\t- settings.shouldLoad() is a user-input validator.\n\t   *\tWhen false is returned, the not_loading template\n\t   *\twill be added to the dropdown\n\t   *\n\t   *\t- canLoad() is lower level validator that checks\n\t   * \tthe Tom Select instance. There is no inherent user\n\t   *\tfeedback when canLoad returns false\n\t   *\n\t   */\n\n\n\t  canLoad(value) {\n\t    if (!this.settings.load) return false;\n\t    if (this.loadedSearches.hasOwnProperty(value)) return false;\n\t    return true;\n\t  }\n\t  /**\n\t   * Invokes the user-provided option provider / loader.\n\t   *\n\t   */\n\n\n\t  load(value) {\n\t    const self = this;\n\t    if (!self.canLoad(value)) return;\n\t    addClasses(self.wrapper, self.settings.loadingClass);\n\t    self.loading++;\n\t    const callback = self.loadCallback.bind(self);\n\t    self.settings.load.call(self, value, callback);\n\t  }\n\t  /**\n\t   * Invoked by the user-provided option provider\n\t   *\n\t   */\n\n\n\t  loadCallback(options, optgroups) {\n\t    const self = this;\n\t    self.loading = Math.max(self.loading - 1, 0);\n\t    self.lastQuery = null;\n\t    self.clearActiveOption(); // when new results load, focus should be on first option\n\n\t    self.setupOptions(options, optgroups);\n\t    self.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t    if (!self.loading) {\n\t      removeClasses(self.wrapper, self.settings.loadingClass);\n\t    }\n\n\t    self.trigger('load', options, optgroups);\n\t  }\n\n\t  preload() {\n\t    var classList = this.wrapper.classList;\n\t    if (classList.contains('preloaded')) return;\n\t    classList.add('preloaded');\n\t    this.load('');\n\t  }\n\t  /**\n\t   * Sets the input field of the control to the specified value.\n\t   *\n\t   */\n\n\n\t  setTextboxValue(value = '') {\n\t    var input = this.control_input;\n\t    var changed = input.value !== value;\n\n\t    if (changed) {\n\t      input.value = value;\n\t      triggerEvent(input, 'update');\n\t      this.lastValue = value;\n\t    }\n\t  }\n\t  /**\n\t   * Returns the value of the control. If multiple items\n\t   * can be selected (e.g. <select multiple>), this returns\n\t   * an array. If only one item can be selected, this\n\t   * returns a string.\n\t   *\n\t   */\n\n\n\t  getValue() {\n\t    if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t      return this.items;\n\t    }\n\n\t    return this.items.join(this.settings.delimiter);\n\t  }\n\t  /**\n\t   * Resets the selected items to the given value.\n\t   *\n\t   */\n\n\n\t  setValue(value, silent) {\n\t    var events = silent ? [] : ['change'];\n\t    debounce_events(this, events, () => {\n\t      this.clear(silent);\n\t      this.addItems(value, silent);\n\t    });\n\t  }\n\t  /**\n\t   * Resets the number of max items to the given value\n\t   *\n\t   */\n\n\n\t  setMaxItems(value) {\n\t    if (value === 0) value = null; //reset to unlimited items.\n\n\t    this.settings.maxItems = value;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Sets the selected item.\n\t   *\n\t   */\n\n\n\t  setActiveItem(item, e) {\n\t    var self = this;\n\t    var eventName;\n\t    var i, begin, end, swap;\n\t    var last;\n\t    if (self.settings.mode === 'single') return; // clear the active selection\n\n\t    if (!item) {\n\t      self.clearActiveItems();\n\n\t      if (self.isFocused) {\n\t        self.showInput();\n\t      }\n\n\t      return;\n\t    } // modify selection\n\n\n\t    eventName = e && e.type.toLowerCase();\n\n\t    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n\t      last = self.getLastActive();\n\t      begin = Array.prototype.indexOf.call(self.control.children, last);\n\t      end = Array.prototype.indexOf.call(self.control.children, item);\n\n\t      if (begin > end) {\n\t        swap = begin;\n\t        begin = end;\n\t        end = swap;\n\t      }\n\n\t      for (i = begin; i <= end; i++) {\n\t        item = self.control.children[i];\n\n\t        if (self.activeItems.indexOf(item) === -1) {\n\t          self.setActiveItemClass(item);\n\t        }\n\t      }\n\n\t      preventDefault(e);\n\t    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n\t      if (item.classList.contains('active')) {\n\t        self.removeActiveItem(item);\n\t      } else {\n\t        self.setActiveItemClass(item);\n\t      }\n\t    } else {\n\t      self.clearActiveItems();\n\t      self.setActiveItemClass(item);\n\t    } // ensure control has focus\n\n\n\t    self.hideInput();\n\n\t    if (!self.isFocused) {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * Set the active and last-active classes\n\t   *\n\t   */\n\n\n\t  setActiveItemClass(item) {\n\t    const self = this;\n\t    const last_active = self.control.querySelector('.last-active');\n\t    if (last_active) removeClasses(last_active, 'last-active');\n\t    addClasses(item, 'active last-active');\n\t    self.trigger('item_select', item);\n\n\t    if (self.activeItems.indexOf(item) == -1) {\n\t      self.activeItems.push(item);\n\t    }\n\t  }\n\t  /**\n\t   * Remove active item\n\t   *\n\t   */\n\n\n\t  removeActiveItem(item) {\n\t    var idx = this.activeItems.indexOf(item);\n\t    this.activeItems.splice(idx, 1);\n\t    removeClasses(item, 'active');\n\t  }\n\t  /**\n\t   * Clears all the active items\n\t   *\n\t   */\n\n\n\t  clearActiveItems() {\n\t    removeClasses(this.activeItems, 'active');\n\t    this.activeItems = [];\n\t  }\n\t  /**\n\t   * Sets the selected item in the dropdown menu\n\t   * of available options.\n\t   *\n\t   */\n\n\n\t  setActiveOption(option, scroll = true) {\n\t    if (option === this.activeOption) {\n\t      return;\n\t    }\n\n\t    this.clearActiveOption();\n\t    if (!option) return;\n\t    this.activeOption = option;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': option.getAttribute('id')\n\t    });\n\t    setAttr(option, {\n\t      'aria-selected': 'true'\n\t    });\n\t    addClasses(option, 'active');\n\t    if (scroll) this.scrollToOption(option);\n\t  }\n\t  /**\n\t   * Sets the dropdown_content scrollTop to display the option\n\t   *\n\t   */\n\n\n\t  scrollToOption(option, behavior) {\n\t    if (!option) return;\n\t    const content = this.dropdown_content;\n\t    const height_menu = content.clientHeight;\n\t    const scrollTop = content.scrollTop || 0;\n\t    const height_item = option.offsetHeight;\n\t    const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t    if (y + height_item > height_menu + scrollTop) {\n\t      this.scroll(y - height_menu + height_item, behavior);\n\t    } else if (y < scrollTop) {\n\t      this.scroll(y, behavior);\n\t    }\n\t  }\n\t  /**\n\t   * Scroll the dropdown to the given position\n\t   *\n\t   */\n\n\n\t  scroll(scrollTop, behavior) {\n\t    const content = this.dropdown_content;\n\n\t    if (behavior) {\n\t      content.style.scrollBehavior = behavior;\n\t    }\n\n\t    content.scrollTop = scrollTop;\n\t    content.style.scrollBehavior = '';\n\t  }\n\t  /**\n\t   * Clears the active option\n\t   *\n\t   */\n\n\n\t  clearActiveOption() {\n\t    if (this.activeOption) {\n\t      removeClasses(this.activeOption, 'active');\n\t      setAttr(this.activeOption, {\n\t        'aria-selected': null\n\t      });\n\t    }\n\n\t    this.activeOption = null;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': null\n\t    });\n\t  }\n\t  /**\n\t   * Selects all items (CTRL + A).\n\t   */\n\n\n\t  selectAll() {\n\t    const self = this;\n\t    if (self.settings.mode === 'single') return;\n\t    const activeItems = self.controlChildren();\n\t    if (!activeItems.length) return;\n\t    self.hideInput();\n\t    self.close();\n\t    self.activeItems = activeItems;\n\t    iterate(activeItems, item => {\n\t      self.setActiveItemClass(item);\n\t    });\n\t  }\n\t  /**\n\t   * Determines if the control_input should be in a hidden or visible state\n\t   *\n\t   */\n\n\n\t  inputState() {\n\t    var self = this;\n\t    if (!self.control.contains(self.control_input)) return;\n\t    setAttr(self.control_input, {\n\t      placeholder: self.settings.placeholder\n\t    });\n\n\t    if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n\t      self.setTextboxValue();\n\t      self.isInputHidden = true;\n\t    } else {\n\t      if (self.settings.hidePlaceholder && self.items.length > 0) {\n\t        setAttr(self.control_input, {\n\t          placeholder: ''\n\t        });\n\t      }\n\n\t      self.isInputHidden = false;\n\t    }\n\n\t    self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n\t  }\n\t  /**\n\t   * Hides the input element out of view, while\n\t   * retaining its focus.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  hideInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Restores input visibility.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  showInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Get the input value\n\t   */\n\n\n\t  inputValue() {\n\t    return this.control_input.value.trim();\n\t  }\n\t  /**\n\t   * Gives the control focus.\n\t   */\n\n\n\t  focus() {\n\t    var self = this;\n\t    if (self.isDisabled) return;\n\t    self.ignoreFocus = true;\n\n\t    if (self.control_input.offsetWidth) {\n\t      self.control_input.focus();\n\t    } else {\n\t      self.focus_node.focus();\n\t    }\n\n\t    setTimeout(() => {\n\t      self.ignoreFocus = false;\n\t      self.onFocus();\n\t    }, 0);\n\t  }\n\t  /**\n\t   * Forces the control out of focus.\n\t   *\n\t   */\n\n\n\t  blur() {\n\t    this.focus_node.blur();\n\t    this.onBlur();\n\t  }\n\t  /**\n\t   * Returns a function that scores an object\n\t   * to show how good of a match it is to the\n\t   * provided query.\n\t   *\n\t   * @return {function}\n\t   */\n\n\n\t  getScoreFunction(query) {\n\t    return this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t  }\n\t  /**\n\t   * Returns search options for sifter (the system\n\t   * for scoring and sorting results).\n\t   *\n\t   * @see https://github.com/orchidjs/sifter.js\n\t   * @return {object}\n\t   */\n\n\n\t  getSearchOptions() {\n\t    var settings = this.settings;\n\t    var sort = settings.sortField;\n\n\t    if (typeof settings.sortField === 'string') {\n\t      sort = [{\n\t        field: settings.sortField\n\t      }];\n\t    }\n\n\t    return {\n\t      fields: settings.searchField,\n\t      conjunction: settings.searchConjunction,\n\t      sort: sort,\n\t      nesting: settings.nesting\n\t    };\n\t  }\n\t  /**\n\t   * Searches through available options and returns\n\t   * a sorted array of matches.\n\t   *\n\t   */\n\n\n\t  search(query) {\n\t    var i, result, calculateScore;\n\t    var self = this;\n\t    var options = this.getSearchOptions(); // validate user-provided result scoring function\n\n\t    if (self.settings.score) {\n\t      calculateScore = self.settings.score.call(self, query);\n\n\t      if (typeof calculateScore !== 'function') {\n\t        throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t      }\n\t    } // perform search\n\n\n\t    if (query !== self.lastQuery) {\n\t      self.lastQuery = query;\n\t      result = self.sifter.search(query, Object.assign(options, {\n\t        score: calculateScore\n\t      }));\n\t      self.currentResults = result;\n\t    } else {\n\t      result = Object.assign({}, self.currentResults);\n\t    } // filter out selected items\n\n\n\t    if (self.settings.hideSelected) {\n\t      for (i = result.items.length - 1; i >= 0; i--) {\n\t        let hashed = hash_key(result.items[i].id);\n\n\t        if (hashed && self.items.indexOf(hashed) !== -1) {\n\t          result.items.splice(i, 1);\n\t        }\n\t      }\n\t    }\n\n\t    return result;\n\t  }\n\t  /**\n\t   * Refreshes the list of available options shown\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  refreshOptions(triggerDropdown = true) {\n\t    var i, j, k, n, optgroup, optgroups, html, has_create_option, active_value, active_group;\n\t    var create;\n\t    const groups = {};\n\t    const groups_order = [];\n\t    var self = this;\n\t    var query = self.inputValue();\n\t    var results = self.search(query);\n\t    var active_option = null; //self.activeOption;\n\n\t    var show_dropdown = self.settings.shouldOpen || false;\n\t    var dropdown_content = self.dropdown_content;\n\n\t    if (self.activeOption) {\n\t      active_value = self.activeOption.dataset.value;\n\t      active_group = self.activeOption.closest('[data-group]');\n\t    } // build markup\n\n\n\t    n = results.items.length;\n\n\t    if (typeof self.settings.maxOptions === 'number') {\n\t      n = Math.min(n, self.settings.maxOptions);\n\t    }\n\n\t    if (n > 0) {\n\t      show_dropdown = true;\n\t    } // render and group available options individually\n\n\n\t    for (i = 0; i < n; i++) {\n\t      // get option dom element\n\t      let opt_value = results.items[i].id;\n\t      let option = self.options[opt_value];\n\t      let option_el = self.getOption(opt_value, true); // toggle 'selected' class\n\n\t      if (!self.settings.hideSelected) {\n\t        option_el.classList.toggle('selected', self.items.includes(opt_value));\n\t      }\n\n\t      optgroup = option[self.settings.optgroupField] || '';\n\t      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t        optgroup = optgroups[j];\n\n\t        if (!self.optgroups.hasOwnProperty(optgroup)) {\n\t          optgroup = '';\n\t        }\n\n\t        if (!groups.hasOwnProperty(optgroup)) {\n\t          groups[optgroup] = document.createDocumentFragment();\n\t          groups_order.push(optgroup);\n\t        } // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\n\n\t        if (j > 0) {\n\t          option_el = option_el.cloneNode(true);\n\t          setAttr(option_el, {\n\t            id: option.$id + '-clone-' + j,\n\t            'aria-selected': null\n\t          });\n\t          option_el.classList.add('ts-cloned');\n\t          removeClasses(option_el, 'active');\n\t        } // make sure we keep the activeOption in the same group\n\n\n\t        if (!active_option && active_value == opt_value) {\n\t          if (active_group) {\n\t            if (active_group.dataset.group === optgroup) {\n\t              active_option = option_el;\n\t            }\n\t          } else {\n\t            active_option = option_el;\n\t          }\n\t        }\n\n\t        groups[optgroup].appendChild(option_el);\n\t      }\n\t    } // sort optgroups\n\n\n\t    if (this.settings.lockOptgroupOrder) {\n\t      groups_order.sort((a, b) => {\n\t        var a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t        var b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t        return a_order - b_order;\n\t      });\n\t    } // render optgroup headers & join groups\n\n\n\t    html = document.createDocumentFragment();\n\t    iterate(groups_order, optgroup => {\n\t      if (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\t        let group_options = document.createDocumentFragment();\n\t        let header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t        append(group_options, header);\n\t        append(group_options, groups[optgroup]);\n\t        let group_html = self.render('optgroup', {\n\t          group: self.optgroups[optgroup],\n\t          options: group_options\n\t        });\n\t        append(html, group_html);\n\t      } else {\n\t        append(html, groups[optgroup]);\n\t      }\n\t    });\n\t    dropdown_content.innerHTML = '';\n\t    append(dropdown_content, html); // highlight matching terms inline\n\n\t    if (self.settings.highlight) {\n\t      removeHighlight(dropdown_content);\n\n\t      if (results.query.length && results.tokens.length) {\n\t        iterate(results.tokens, tok => {\n\t          highlight(dropdown_content, tok.regex);\n\t        });\n\t      }\n\t    } // helper method for adding templates to dropdown\n\n\n\t    var add_template = template => {\n\t      let content = self.render(template, {\n\t        input: query\n\t      });\n\n\t      if (content) {\n\t        show_dropdown = true;\n\t        dropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t      }\n\n\t      return content;\n\t    }; // add loading message\n\n\n\t    if (self.loading) {\n\t      add_template('loading'); // invalid query\n\t    } else if (!self.settings.shouldLoad.call(self, query)) {\n\t      add_template('not_loading'); // add no_results message\n\t    } else if (results.items.length === 0) {\n\t      add_template('no_results');\n\t    } // add create option\n\n\n\t    has_create_option = self.canCreate(query);\n\n\t    if (has_create_option) {\n\t      create = add_template('option_create');\n\t    } // activate\n\n\n\t    self.hasOptions = results.items.length > 0 || has_create_option;\n\n\t    if (show_dropdown) {\n\t      if (results.items.length > 0) {\n\t        if (!active_option && self.settings.mode === 'single' && self.items.length) {\n\t          active_option = self.getOption(self.items[0]);\n\t        }\n\n\t        if (!dropdown_content.contains(active_option)) {\n\t          let active_index = 0;\n\n\t          if (create && !self.settings.addPrecedence) {\n\t            active_index = 1;\n\t          }\n\n\t          active_option = self.selectable()[active_index];\n\t        }\n\t      } else if (create) {\n\t        active_option = create;\n\t      }\n\n\t      if (triggerDropdown && !self.isOpen) {\n\t        self.open();\n\t        self.scrollToOption(active_option, 'auto');\n\t      }\n\n\t      self.setActiveOption(active_option);\n\t    } else {\n\t      self.clearActiveOption();\n\n\t      if (triggerDropdown && self.isOpen) {\n\t        self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Return list of selectable options\n\t   *\n\t   */\n\n\n\t  selectable() {\n\t    return this.dropdown_content.querySelectorAll('[data-selectable]');\n\t  }\n\t  /**\n\t   * Adds an available option. If it already exists,\n\t   * nothing will happen. Note: this does not refresh\n\t   * the options list dropdown (use `refreshOptions`\n\t   * for that).\n\t   *\n\t   * Usage:\n\t   *\n\t   *   this.addOption(data)\n\t   *\n\t   */\n\n\n\t  addOption(data, user_created = false) {\n\t    const self = this; // @deprecated 1.7.7\n\t    // use addOptions( array, user_created ) for adding multiple options\n\n\t    if (Array.isArray(data)) {\n\t      self.addOptions(data, user_created);\n\t      return false;\n\t    }\n\n\t    const key = hash_key(data[self.settings.valueField]);\n\n\t    if (key === null || self.options.hasOwnProperty(key)) {\n\t      return false;\n\t    }\n\n\t    data.$order = data.$order || ++self.order;\n\t    data.$id = self.inputId + '-opt-' + data.$order;\n\t    self.options[key] = data;\n\t    self.lastQuery = null;\n\n\t    if (user_created) {\n\t      self.userOptions[key] = user_created;\n\t      self.trigger('option_add', key, data);\n\t    }\n\n\t    return key;\n\t  }\n\t  /**\n\t   * Add multiple options\n\t   *\n\t   */\n\n\n\t  addOptions(data, user_created = false) {\n\t    iterate(data, dat => {\n\t      this.addOption(dat, user_created);\n\t    });\n\t  }\n\t  /**\n\t   * @deprecated 1.7.7\n\t   */\n\n\n\t  registerOption(data) {\n\t    return this.addOption(data);\n\t  }\n\t  /**\n\t   * Registers an option group to the pool of option groups.\n\t   *\n\t   * @return {boolean|string}\n\t   */\n\n\n\t  registerOptionGroup(data) {\n\t    var key = hash_key(data[this.settings.optgroupValueField]);\n\t    if (key === null) return false;\n\t    data.$order = data.$order || ++this.order;\n\t    this.optgroups[key] = data;\n\t    return key;\n\t  }\n\t  /**\n\t   * Registers a new optgroup for options\n\t   * to be bucketed into.\n\t   *\n\t   */\n\n\n\t  addOptionGroup(id, data) {\n\t    var hashed_id;\n\t    data[this.settings.optgroupValueField] = id;\n\n\t    if (hashed_id = this.registerOptionGroup(data)) {\n\t      this.trigger('optgroup_add', hashed_id, data);\n\t    }\n\t  }\n\t  /**\n\t   * Removes an existing option group.\n\t   *\n\t   */\n\n\n\t  removeOptionGroup(id) {\n\t    if (this.optgroups.hasOwnProperty(id)) {\n\t      delete this.optgroups[id];\n\t      this.clearCache();\n\t      this.trigger('optgroup_remove', id);\n\t    }\n\t  }\n\t  /**\n\t   * Clears all existing option groups.\n\t   */\n\n\n\t  clearOptionGroups() {\n\t    this.optgroups = {};\n\t    this.clearCache();\n\t    this.trigger('optgroup_clear');\n\t  }\n\t  /**\n\t   * Updates an option available for selection. If\n\t   * it is visible in the selected items or options\n\t   * dropdown, it will be re-rendered automatically.\n\t   *\n\t   */\n\n\n\t  updateOption(value, data) {\n\t    const self = this;\n\t    var item_new;\n\t    var index_item;\n\t    const value_old = hash_key(value);\n\t    const value_new = hash_key(data[self.settings.valueField]); // sanity checks\n\n\t    if (value_old === null) return;\n\t    if (!self.options.hasOwnProperty(value_old)) return;\n\t    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t    const option = self.getOption(value_old);\n\t    const item = self.getItem(value_old);\n\t    data.$order = data.$order || self.options[value_old].$order;\n\t    delete self.options[value_old]; // invalidate render cache\n\t    // don't remove existing node yet, we'll remove it after replacing it\n\n\t    self.uncacheValue(value_new);\n\t    self.options[value_new] = data; // update the option if it's in the dropdown\n\n\t    if (option) {\n\t      if (self.dropdown_content.contains(option)) {\n\t        const option_new = self._render('option', data);\n\n\t        replaceNode(option, option_new);\n\n\t        if (self.activeOption === option) {\n\t          self.setActiveOption(option_new);\n\t        }\n\t      }\n\n\t      option.remove();\n\t    } // update the item if we have one\n\n\n\t    if (item) {\n\t      index_item = self.items.indexOf(value_old);\n\n\t      if (index_item !== -1) {\n\t        self.items.splice(index_item, 1, value_new);\n\t      }\n\n\t      item_new = self._render('item', data);\n\t      if (item.classList.contains('active')) addClasses(item_new, 'active');\n\t      replaceNode(item, item_new);\n\t    } // invalidate last query because we might have updated the sortField\n\n\n\t    self.lastQuery = null;\n\t  }\n\t  /**\n\t   * Removes a single option.\n\t   *\n\t   */\n\n\n\t  removeOption(value, silent) {\n\t    const self = this;\n\t    value = get_hash(value);\n\t    self.uncacheValue(value);\n\t    delete self.userOptions[value];\n\t    delete self.options[value];\n\t    self.lastQuery = null;\n\t    self.trigger('option_remove', value);\n\t    self.removeItem(value, silent);\n\t  }\n\t  /**\n\t   * Clears all options.\n\t   */\n\n\n\t  clearOptions(filter) {\n\t    const boundFilter = (filter || this.clearFilter).bind(this);\n\t    this.loadedSearches = {};\n\t    this.userOptions = {};\n\t    this.clearCache();\n\t    const selected = {};\n\t    iterate(this.options, (option, key) => {\n\t      if (boundFilter(option, key)) {\n\t        selected[key] = this.options[key];\n\t      }\n\t    });\n\t    this.options = this.sifter.items = selected;\n\t    this.lastQuery = null;\n\t    this.trigger('option_clear');\n\t  }\n\t  /**\n\t   * Used by clearOptions() to decide whether or not an option should be removed\n\t   * Return true to keep an option, false to remove\n\t   *\n\t   */\n\n\n\t  clearFilter(option, value) {\n\t    if (this.items.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Returns the dom element of the option\n\t   * matching the given value.\n\t   *\n\t   */\n\n\n\t  getOption(value, create = false) {\n\t    const hashed = hash_key(value);\n\n\t    if (hashed !== null && this.options.hasOwnProperty(hashed)) {\n\t      const option = this.options[hashed];\n\n\t      if (option.$div) {\n\t        return option.$div;\n\t      }\n\n\t      if (create) {\n\t        return this._render('option', option);\n\t      }\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Returns the dom element of the next or previous dom element of the same type\n\t   * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t   *\n\t   */\n\n\n\t  getAdjacent(option, direction, type = 'option') {\n\t    var self = this,\n\t        all;\n\n\t    if (!option) {\n\t      return null;\n\t    }\n\n\t    if (type == 'item') {\n\t      all = self.controlChildren();\n\t    } else {\n\t      all = self.dropdown_content.querySelectorAll('[data-selectable]');\n\t    }\n\n\t    for (let i = 0; i < all.length; i++) {\n\t      if (all[i] != option) {\n\t        continue;\n\t      }\n\n\t      if (direction > 0) {\n\t        return all[i + 1];\n\t      }\n\n\t      return all[i - 1];\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Returns the dom element of the item\n\t   * matching the given value.\n\t   *\n\t   */\n\n\n\t  getItem(item) {\n\t    if (typeof item == 'object') {\n\t      return item;\n\t    }\n\n\t    var value = hash_key(item);\n\t    return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n\t  }\n\t  /**\n\t   * \"Selects\" multiple items at once. Adds them to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItems(values, silent) {\n\t    var self = this;\n\t    var items = Array.isArray(values) ? values : [values];\n\t    items = items.filter(x => self.items.indexOf(x) === -1);\n\n\t    for (let i = 0, n = items.length; i < n; i++) {\n\t      self.isPending = i < n - 1;\n\t      self.addItem(items[i], silent);\n\t    }\n\t  }\n\t  /**\n\t   * \"Selects\" an item. Adds it to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItem(value, silent) {\n\t    var events = silent ? [] : ['change', 'dropdown_close'];\n\t    debounce_events(this, events, () => {\n\t      var item, wasFull;\n\t      const self = this;\n\t      const inputMode = self.settings.mode;\n\t      const hashed = hash_key(value);\n\n\t      if (hashed && self.items.indexOf(hashed) !== -1) {\n\t        if (inputMode === 'single') {\n\t          self.close();\n\t        }\n\n\t        if (inputMode === 'single' || !self.settings.duplicates) {\n\t          return;\n\t        }\n\t      }\n\n\t      if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t      if (inputMode === 'single') self.clear(silent);\n\t      if (inputMode === 'multi' && self.isFull()) return;\n\t      item = self._render('item', self.options[hashed]);\n\n\t      if (self.control.contains(item)) {\n\t        // duplicates\n\t        item = item.cloneNode(true);\n\t      }\n\n\t      wasFull = self.isFull();\n\t      self.items.splice(self.caretPos, 0, hashed);\n\t      self.insertAtCaret(item);\n\n\t      if (self.isSetup) {\n\t        // update menu / remove the option (if this is not one item being added as part of series)\n\t        if (!self.isPending && self.settings.hideSelected) {\n\t          let option = self.getOption(hashed);\n\t          let next = self.getAdjacent(option, 1);\n\n\t          if (next) {\n\t            self.setActiveOption(next);\n\t          }\n\t        } // refreshOptions after setActiveOption(),\n\t        // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\n\n\t        if (!self.isPending && !self.settings.closeAfterSelect) {\n\t          self.refreshOptions(self.isFocused && inputMode !== 'single');\n\t        } // hide the menu if the maximum number of items have been selected or no options are left\n\n\n\t        if (self.settings.closeAfterSelect != false && self.isFull()) {\n\t          self.close();\n\t        } else if (!self.isPending) {\n\t          self.positionDropdown();\n\t        }\n\n\t        self.trigger('item_add', hashed, item);\n\n\t        if (!self.isPending) {\n\t          self.updateOriginalInput({\n\t            silent: silent\n\t          });\n\t        }\n\t      }\n\n\t      if (!self.isPending || !wasFull && self.isFull()) {\n\t        self.inputState();\n\t        self.refreshState();\n\t      }\n\t    });\n\t  }\n\t  /**\n\t   * Removes the selected item matching\n\t   * the provided value.\n\t   *\n\t   */\n\n\n\t  removeItem(item = null, silent) {\n\t    const self = this;\n\t    item = self.getItem(item);\n\t    if (!item) return;\n\t    var i, idx;\n\t    const value = item.dataset.value;\n\t    i = nodeIndex(item);\n\t    item.remove();\n\n\t    if (item.classList.contains('active')) {\n\t      idx = self.activeItems.indexOf(item);\n\t      self.activeItems.splice(idx, 1);\n\t      removeClasses(item, 'active');\n\t    }\n\n\t    self.items.splice(i, 1);\n\t    self.lastQuery = null;\n\n\t    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t      self.removeOption(value, silent);\n\t    }\n\n\t    if (i < self.caretPos) {\n\t      self.setCaret(self.caretPos - 1);\n\t    }\n\n\t    self.updateOriginalInput({\n\t      silent: silent\n\t    });\n\t    self.refreshState();\n\t    self.positionDropdown();\n\t    self.trigger('item_remove', value, item);\n\t  }\n\t  /**\n\t   * Invokes the `create` method provided in the\n\t   * TomSelect options that should provide the data\n\t   * for the new item, given the user input.\n\t   *\n\t   * Once this completes, it will be added\n\t   * to the item list.\n\t   *\n\t   */\n\n\n\t  createItem(input = null, triggerDropdown = true, callback = () => {}) {\n\t    var self = this;\n\t    var caret = self.caretPos;\n\t    var output;\n\t    input = input || self.inputValue();\n\n\t    if (!self.canCreate(input)) {\n\t      callback();\n\t      return false;\n\t    }\n\n\t    self.lock();\n\t    var created = false;\n\n\t    var create = data => {\n\t      self.unlock();\n\t      if (!data || typeof data !== 'object') return callback();\n\t      var value = hash_key(data[self.settings.valueField]);\n\n\t      if (typeof value !== 'string') {\n\t        return callback();\n\t      }\n\n\t      self.setTextboxValue();\n\t      self.addOption(data, true);\n\t      self.setCaret(caret);\n\t      self.addItem(value);\n\t      callback(data);\n\t      created = true;\n\t    };\n\n\t    if (typeof self.settings.create === 'function') {\n\t      output = self.settings.create.call(this, input, create);\n\t    } else {\n\t      output = {\n\t        [self.settings.labelField]: input,\n\t        [self.settings.valueField]: input\n\t      };\n\t    }\n\n\t    if (!created) {\n\t      create(output);\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * Re-renders the selected item lists.\n\t   */\n\n\n\t  refreshItems() {\n\t    var self = this;\n\t    self.lastQuery = null;\n\n\t    if (self.isSetup) {\n\t      self.addItems(self.items);\n\t    }\n\n\t    self.updateOriginalInput();\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Updates all state-dependent attributes\n\t   * and CSS classes.\n\t   */\n\n\n\t  refreshState() {\n\t    const self = this;\n\t    self.refreshValidityState();\n\t    const isFull = self.isFull();\n\t    const isLocked = self.isLocked;\n\t    self.wrapper.classList.toggle('rtl', self.rtl);\n\t    const wrap_classList = self.wrapper.classList;\n\t    wrap_classList.toggle('focus', self.isFocused);\n\t    wrap_classList.toggle('disabled', self.isDisabled);\n\t    wrap_classList.toggle('required', self.isRequired);\n\t    wrap_classList.toggle('invalid', !self.isValid);\n\t    wrap_classList.toggle('locked', isLocked);\n\t    wrap_classList.toggle('full', isFull);\n\t    wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n\t    wrap_classList.toggle('dropdown-active', self.isOpen);\n\t    wrap_classList.toggle('has-options', isEmptyObject(self.options));\n\t    wrap_classList.toggle('has-items', self.items.length > 0);\n\t  }\n\t  /**\n\t   * Update the `required` attribute of both input and control input.\n\t   *\n\t   * The `required` property needs to be activated on the control input\n\t   * for the error to be displayed at the right place. `required` also\n\t   * needs to be temporarily deactivated on the input since the input is\n\t   * hidden and can't show errors.\n\t   */\n\n\n\t  refreshValidityState() {\n\t    var self = this;\n\n\t    if (!self.input.validity) {\n\t      return;\n\t    }\n\n\t    self.isValid = self.input.validity.valid;\n\t    self.isInvalid = !self.isValid;\n\t  }\n\t  /**\n\t   * Determines whether or not more items can be added\n\t   * to the control without exceeding the user-defined maximum.\n\t   *\n\t   * @returns {boolean}\n\t   */\n\n\n\t  isFull() {\n\t    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t  }\n\t  /**\n\t   * Refreshes the original <select> or <input>\n\t   * element to reflect the current state.\n\t   *\n\t   */\n\n\n\t  updateOriginalInput(opts = {}) {\n\t    const self = this;\n\t    var option, label;\n\t    const empty_option = self.input.querySelector('option[value=\"\"]');\n\n\t    if (self.is_select_tag) {\n\t      const selected = [];\n\t      const has_selected = self.input.querySelectorAll('option:checked').length;\n\n\t      function AddSelected(option_el, value, label) {\n\t        if (!option_el) {\n\t          option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t        } // don't move empty option from top of list\n\t        // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\n\n\t        if (option_el != empty_option) {\n\t          self.input.append(option_el);\n\t        }\n\n\t        selected.push(option_el); // marking empty option as selected can break validation\n\t        // fixes https://github.com/orchidjs/tom-select/issues/303\n\n\t        if (option_el != empty_option || has_selected > 0) {\n\t          option_el.selected = true;\n\t        }\n\n\t        return option_el;\n\t      } // unselect all selected options\n\n\n\t      self.input.querySelectorAll('option:checked').forEach(option_el => {\n\t        option_el.selected = false;\n\t      }); // nothing selected?\n\n\t      if (self.items.length == 0 && self.settings.mode == 'single') {\n\t        AddSelected(empty_option, \"\", \"\"); // order selected <option> tags for values in self.items\n\t      } else {\n\t        self.items.forEach(value => {\n\t          option = self.options[value];\n\t          label = option[self.settings.labelField] || '';\n\n\t          if (selected.includes(option.$option)) {\n\t            const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n\t            AddSelected(reuse_opt, value, label);\n\t          } else {\n\t            option.$option = AddSelected(option.$option, value, label);\n\t          }\n\t        });\n\t      }\n\t    } else {\n\t      self.input.value = self.getValue();\n\t    }\n\n\t    if (self.isSetup) {\n\t      if (!opts.silent) {\n\t        self.trigger('change', self.getValue());\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Shows the autocomplete dropdown containing\n\t   * the available options.\n\t   */\n\n\n\t  open() {\n\t    var self = this;\n\t    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n\t    self.isOpen = true;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'true'\n\t    });\n\t    self.refreshState();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'hidden',\n\t      display: 'block'\n\t    });\n\t    self.positionDropdown();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'visible',\n\t      display: 'block'\n\t    });\n\t    self.focus();\n\t    self.trigger('dropdown_open', self.dropdown);\n\t  }\n\t  /**\n\t   * Closes the autocomplete dropdown menu.\n\t   */\n\n\n\t  close(setTextboxValue = true) {\n\t    var self = this;\n\t    var trigger = self.isOpen;\n\n\t    if (setTextboxValue) {\n\t      // before blur() to prevent form onchange event\n\t      self.setTextboxValue();\n\n\t      if (self.settings.mode === 'single' && self.items.length) {\n\t        self.hideInput();\n\t      }\n\t    }\n\n\t    self.isOpen = false;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'false'\n\t    });\n\t    applyCSS(self.dropdown, {\n\t      display: 'none'\n\t    });\n\n\t    if (self.settings.hideSelected) {\n\t      self.clearActiveOption();\n\t    }\n\n\t    self.refreshState();\n\t    if (trigger) self.trigger('dropdown_close', self.dropdown);\n\t  }\n\t  /**\n\t   * Calculates and applies the appropriate\n\t   * position of the dropdown if dropdownParent = 'body'.\n\t   * Otherwise, position is determined by css\n\t   */\n\n\n\t  positionDropdown() {\n\t    if (this.settings.dropdownParent !== 'body') {\n\t      return;\n\t    }\n\n\t    var context = this.control;\n\t    var rect = context.getBoundingClientRect();\n\t    var top = context.offsetHeight + rect.top + window.scrollY;\n\t    var left = rect.left + window.scrollX;\n\t    applyCSS(this.dropdown, {\n\t      width: rect.width + 'px',\n\t      top: top + 'px',\n\t      left: left + 'px'\n\t    });\n\t  }\n\t  /**\n\t   * Resets / clears all selected items\n\t   * from the control.\n\t   *\n\t   */\n\n\n\t  clear(silent) {\n\t    var self = this;\n\t    if (!self.items.length) return;\n\t    var items = self.controlChildren();\n\t    iterate(items, item => {\n\t      self.removeItem(item, true);\n\t    });\n\t    self.showInput();\n\t    if (!silent) self.updateOriginalInput();\n\t    self.trigger('clear');\n\t  }\n\t  /**\n\t   * A helper method for inserting an element\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  insertAtCaret(el) {\n\t    const self = this;\n\t    const caret = self.caretPos;\n\t    const target = self.control;\n\t    target.insertBefore(el, target.children[caret]);\n\t    self.setCaret(caret + 1);\n\t  }\n\t  /**\n\t   * Removes the current selected item(s).\n\t   *\n\t   */\n\n\n\t  deleteSelection(e) {\n\t    var direction, selection, caret, tail;\n\t    var self = this;\n\t    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n\t    selection = getSelection(self.control_input); // determine items that will be removed\n\n\t    const rm_items = [];\n\n\t    if (self.activeItems.length) {\n\t      tail = getTail(self.activeItems, direction);\n\t      caret = nodeIndex(tail);\n\n\t      if (direction > 0) {\n\t        caret++;\n\t      }\n\n\t      iterate(self.activeItems, item => rm_items.push(item));\n\t    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t      const items = self.controlChildren();\n\n\t      if (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t        rm_items.push(items[self.caretPos - 1]);\n\t      } else if (direction > 0 && selection.start === self.inputValue().length) {\n\t        rm_items.push(items[self.caretPos]);\n\t      }\n\t    }\n\n\t    if (!self.shouldDelete(rm_items, e)) {\n\t      return false;\n\t    }\n\n\t    preventDefault(e, true); // perform removal\n\n\t    if (typeof caret !== 'undefined') {\n\t      self.setCaret(caret);\n\t    }\n\n\t    while (rm_items.length) {\n\t      self.removeItem(rm_items.pop());\n\t    }\n\n\t    self.showInput();\n\t    self.positionDropdown();\n\t    self.refreshOptions(false);\n\t    return true;\n\t  }\n\t  /**\n\t   * Return true if the items should be deleted\n\t   */\n\n\n\t  shouldDelete(items, evt) {\n\t    const values = items.map(item => item.dataset.value); // allow the callback to abort\n\n\t    if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {\n\t      return false;\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * Selects the previous / next item (depending on the `direction` argument).\n\t   *\n\t   * > 0 - right\n\t   * < 0 - left\n\t   *\n\t   */\n\n\n\t  advanceSelection(direction, e) {\n\t    var last_active,\n\t        adjacent,\n\t        self = this;\n\t    if (self.rtl) direction *= -1;\n\t    if (self.inputValue().length) return; // add or remove to active items\n\n\t    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n\t      last_active = self.getLastActive(direction);\n\n\t      if (last_active) {\n\t        if (!last_active.classList.contains('active')) {\n\t          adjacent = last_active;\n\t        } else {\n\t          adjacent = self.getAdjacent(last_active, direction, 'item');\n\t        } // if no active item, get items adjacent to the control input\n\n\t      } else if (direction > 0) {\n\t        adjacent = self.control_input.nextElementSibling;\n\t      } else {\n\t        adjacent = self.control_input.previousElementSibling;\n\t      }\n\n\t      if (adjacent) {\n\t        if (adjacent.classList.contains('active')) {\n\t          self.removeActiveItem(last_active);\n\t        }\n\n\t        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t      } // move caret to the left or right\n\n\t    } else {\n\t      self.moveCaret(direction);\n\t    }\n\t  }\n\n\t  moveCaret(direction) {}\n\t  /**\n\t   * Get the last active item\n\t   *\n\t   */\n\n\n\t  getLastActive(direction) {\n\t    let last_active = this.control.querySelector('.last-active');\n\n\t    if (last_active) {\n\t      return last_active;\n\t    }\n\n\t    var result = this.control.querySelectorAll('.active');\n\n\t    if (result) {\n\t      return getTail(result, direction);\n\t    }\n\t  }\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\n\n\t  setCaret(new_pos) {\n\t    this.caretPos = this.items.length;\n\t  }\n\t  /**\n\t   * Return list of item dom elements\n\t   *\n\t   */\n\n\n\t  controlChildren() {\n\t    return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n\t  }\n\t  /**\n\t   * Disables user input on the control. Used while\n\t   * items are being asynchronously created.\n\t   */\n\n\n\t  lock() {\n\t    this.isLocked = true;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Re-enables user input on the control.\n\t   */\n\n\n\t  unlock() {\n\t    this.isLocked = false;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Disables user input on the control completely.\n\t   * While disabled, it cannot receive focus.\n\t   */\n\n\n\t  disable() {\n\t    var self = this;\n\t    self.input.disabled = true;\n\t    self.control_input.disabled = true;\n\t    self.focus_node.tabIndex = -1;\n\t    self.isDisabled = true;\n\t    this.close();\n\t    self.lock();\n\t  }\n\t  /**\n\t   * Enables the control so that it can respond\n\t   * to focus and user input.\n\t   */\n\n\n\t  enable() {\n\t    var self = this;\n\t    self.input.disabled = false;\n\t    self.control_input.disabled = false;\n\t    self.focus_node.tabIndex = self.tabIndex;\n\t    self.isDisabled = false;\n\t    self.unlock();\n\t  }\n\t  /**\n\t   * Completely destroys the control and\n\t   * unbinds all event listeners so that it can\n\t   * be garbage collected.\n\t   */\n\n\n\t  destroy() {\n\t    var self = this;\n\t    var revertSettings = self.revertSettings;\n\t    self.trigger('destroy');\n\t    self.off();\n\t    self.wrapper.remove();\n\t    self.dropdown.remove();\n\t    self.input.innerHTML = revertSettings.innerHTML;\n\t    self.input.tabIndex = revertSettings.tabIndex;\n\t    removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n\n\t    self._destroy();\n\n\t    delete self.input.tomselect;\n\t  }\n\t  /**\n\t   * A helper method for rendering \"item\" and\n\t   * \"option\" templates, given the data.\n\t   *\n\t   */\n\n\n\t  render(templateName, data) {\n\t    if (typeof this.settings.render[templateName] !== 'function') {\n\t      return null;\n\t    }\n\n\t    return this._render(templateName, data);\n\t  }\n\t  /**\n\t   * _render() can be called directly when we know we don't want to hit the cache\n\t   * return type could be null for some templates, we need https://github.com/microsoft/TypeScript/issues/33014\n\t   */\n\n\n\t  _render(templateName, data) {\n\t    var value = '',\n\t        id,\n\t        html;\n\t    const self = this;\n\n\t    if (templateName === 'option' || templateName == 'item') {\n\t      value = get_hash(data[self.settings.valueField]);\n\t    } // render markup\n\n\n\t    html = self.settings.render[templateName].call(this, data, escape_html);\n\n\t    if (html == null) {\n\t      return html;\n\t    }\n\n\t    html = getDom(html); // add mandatory attributes\n\n\t    if (templateName === 'option' || templateName === 'option_create') {\n\t      if (data[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'aria-disabled': 'true'\n\t        });\n\t      } else {\n\t        setAttr(html, {\n\t          'data-selectable': ''\n\t        });\n\t      }\n\t    } else if (templateName === 'optgroup') {\n\t      id = data.group[self.settings.optgroupValueField];\n\t      setAttr(html, {\n\t        'data-group': id\n\t      });\n\n\t      if (data.group[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'data-disabled': ''\n\t        });\n\t      }\n\t    }\n\n\t    if (templateName === 'option' || templateName === 'item') {\n\t      setAttr(html, {\n\t        'data-value': value\n\t      }); // make sure we have some classes if a template is overwritten\n\n\t      if (templateName === 'item') {\n\t        addClasses(html, self.settings.itemClass);\n\t        setAttr(html, {\n\t          'data-ts-item': ''\n\t        });\n\t      } else {\n\t        addClasses(html, self.settings.optionClass);\n\t        setAttr(html, {\n\t          role: 'option',\n\t          id: data.$id\n\t        }); // update cache\n\n\t        self.options[value].$div = html;\n\t      }\n\t    }\n\n\t    return html;\n\t  }\n\t  /**\n\t   * Clears the render cache for a template. If\n\t   * no template is given, clears all render\n\t   * caches.\n\t   *\n\t   */\n\n\n\t  clearCache() {\n\t    iterate(this.options, (option, value) => {\n\t      if (option.$div) {\n\t        option.$div.remove();\n\t        delete option.$div;\n\t      }\n\t    });\n\t  }\n\t  /**\n\t   * Removes a value from item and option caches\n\t   *\n\t   */\n\n\n\t  uncacheValue(value) {\n\t    const option_el = this.getOption(value);\n\t    if (option_el) option_el.remove();\n\t  }\n\t  /**\n\t   * Determines whether or not to display the\n\t   * create item prompt, given a user input.\n\t   *\n\t   */\n\n\n\t  canCreate(input) {\n\t    return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n\t  }\n\t  /**\n\t   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t   *\n\t   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t   *\n\t   * });\n\t   */\n\n\n\t  hook(when, method, new_fn) {\n\t    var self = this;\n\t    var orig_method = self[method];\n\n\t    self[method] = function () {\n\t      var result, result_new;\n\n\t      if (when === 'after') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      result_new = new_fn.apply(self, arguments);\n\n\t      if (when === 'instead') {\n\t        return result_new;\n\t      }\n\n\t      if (when === 'before') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      return result;\n\t    };\n\t  }\n\n\t}\n\n\t/**\n\t * Plugin: \"change_listener\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction change_listener () {\n\t  addEvent(this.input, 'change', () => {\n\t    this.sync();\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction checkbox_options () {\n\t  var self = this;\n\t  var orig_onOptionSelect = self.onOptionSelect;\n\t  self.settings.hideSelected = false; // update the checkbox for an option\n\n\t  var UpdateCheckbox = function UpdateCheckbox(option) {\n\t    setTimeout(() => {\n\t      var checkbox = option.querySelector('input');\n\n\t      if (checkbox instanceof HTMLInputElement) {\n\t        if (option.classList.contains('selected')) {\n\t          checkbox.checked = true;\n\t        } else {\n\t          checkbox.checked = false;\n\t        }\n\t      }\n\t    }, 1);\n\t  }; // add checkbox to option template\n\n\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_option = self.settings.render.option;\n\n\t    self.settings.render.option = (data, escape_html) => {\n\t      var rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t      var checkbox = document.createElement('input');\n\t      checkbox.addEventListener('click', function (evt) {\n\t        preventDefault(evt);\n\t      });\n\t      checkbox.type = 'checkbox';\n\t      const hashed = hash_key(data[self.settings.valueField]);\n\n\t      if (hashed && self.items.indexOf(hashed) > -1) {\n\t        checkbox.checked = true;\n\t      }\n\n\t      rendered.prepend(checkbox);\n\t      return rendered;\n\t    };\n\t  }); // uncheck when item removed\n\n\t  self.on('item_remove', value => {\n\t    var option = self.getOption(value);\n\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      option.classList.remove('selected'); // selected class won't be removed yet\n\n\t      UpdateCheckbox(option);\n\t    }\n\t  }); // check when item added\n\n\t  self.on('item_add', value => {\n\t    var option = self.getOption(value);\n\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      UpdateCheckbox(option);\n\t    }\n\t  }); // remove items when selected option is clicked\n\n\t  self.hook('instead', 'onOptionSelect', (evt, option) => {\n\t    if (option.classList.contains('selected')) {\n\t      option.classList.remove('selected');\n\t      self.removeItem(option.dataset.value);\n\t      self.refreshOptions();\n\t      preventDefault(evt, true);\n\t      return;\n\t    }\n\n\t    orig_onOptionSelect.call(self, evt, option);\n\t    UpdateCheckbox(option);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction clear_button (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    className: 'clear-button',\n\t    title: 'Clear All',\n\t    html: data => {\n\t      return `<div class=\"${data.className}\" title=\"${data.title}\">&times;</div>`;\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var button = getDom(options.html(options));\n\t    button.addEventListener('click', evt => {\n\t      if (self.isDisabled) {\n\t        return;\n\t      }\n\n\t      self.clear();\n\n\t      if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n\t        self.addItem('');\n\t      }\n\n\t      evt.preventDefault();\n\t      evt.stopPropagation();\n\t    });\n\t    self.control.appendChild(button);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"drag_drop\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction drag_drop () {\n\t  var self = this;\n\t  if (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t  if (self.settings.mode !== 'multi') return;\n\t  var orig_lock = self.lock;\n\t  var orig_unlock = self.unlock;\n\t  self.hook('instead', 'lock', () => {\n\t    var sortable = $(self.control).data('sortable');\n\t    if (sortable) sortable.disable();\n\t    return orig_lock.call(self);\n\t  });\n\t  self.hook('instead', 'unlock', () => {\n\t    var sortable = $(self.control).data('sortable');\n\t    if (sortable) sortable.enable();\n\t    return orig_unlock.call(self);\n\t  });\n\t  self.on('initialize', () => {\n\t    var $control = $(self.control).sortable({\n\t      items: '[data-value]',\n\t      forcePlaceholderSize: true,\n\t      disabled: self.isLocked,\n\t      start: (e, ui) => {\n\t        ui.placeholder.css('width', ui.helper.css('width'));\n\t        $control.css({\n\t          overflow: 'visible'\n\t        });\n\t      },\n\t      stop: () => {\n\t        $control.css({\n\t          overflow: 'hidden'\n\t        });\n\t        var values = [];\n\t        $control.children('[data-value]').each(function () {\n\t          if (this.dataset.value) values.push(this.dataset.value);\n\t        });\n\t        self.setValue(values);\n\t      }\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction dropdown_header (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    title: 'Untitled',\n\t    headerClass: 'dropdown-header',\n\t    titleRowClass: 'dropdown-header-title',\n\t    labelClass: 'dropdown-header-label',\n\t    closeClass: 'dropdown-header-close',\n\t    html: data => {\n\t      return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var header = getDom(options.html(options));\n\t    var close_link = header.querySelector('.' + options.closeClass);\n\n\t    if (close_link) {\n\t      close_link.addEventListener('click', evt => {\n\t        preventDefault(evt, true);\n\t        self.close();\n\t      });\n\t    }\n\n\t    self.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction caret_position () {\n\t  var self = this;\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\n\t  self.hook('instead', 'setCaret', new_pos => {\n\t    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n\t      new_pos = self.items.length;\n\t    } else {\n\t      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t      if (new_pos != self.caretPos && !self.isPending) {\n\t        self.controlChildren().forEach((child, j) => {\n\t          if (j < new_pos) {\n\t            self.control_input.insertAdjacentElement('beforebegin', child);\n\t          } else {\n\t            self.control.appendChild(child);\n\t          }\n\t        });\n\t      }\n\t    }\n\n\t    self.caretPos = new_pos;\n\t  });\n\t  self.hook('instead', 'moveCaret', direction => {\n\t    if (!self.isFocused) return; // move caret before or after selected items\n\n\t    const last_active = self.getLastActive(direction);\n\n\t    if (last_active) {\n\t      const idx = nodeIndex(last_active);\n\t      self.setCaret(direction > 0 ? idx + 1 : idx);\n\t      self.setActiveItem();\n\t      removeClasses(last_active, 'last-active'); // move caret left or right of current position\n\t    } else {\n\t      self.setCaret(self.caretPos + direction);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction dropdown_input () {\n\t  const self = this;\n\t  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\t  self.hook('before', 'setup', () => {\n\t    self.focus_node = self.control;\n\t    addClasses(self.control_input, 'dropdown-input');\n\t    const div = getDom('<div class=\"dropdown-input-wrap\">');\n\t    div.append(self.control_input);\n\t    self.dropdown.insertBefore(div, self.dropdown.firstChild); // set a placeholder in the select control\n\n\t    const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n\t    placeholder.placeholder = self.settings.placeholder || '';\n\t    self.control.append(placeholder);\n\t  });\n\t  self.on('initialize', () => {\n\t    // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t    self.control_input.addEventListener('keydown', evt => {\n\t      //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t      switch (evt.keyCode) {\n\t        case KEY_ESC:\n\t          if (self.isOpen) {\n\t            preventDefault(evt, true);\n\t            self.close();\n\t          }\n\n\t          self.clearActiveItems();\n\t          return;\n\n\t        case KEY_TAB:\n\t          self.focus_node.tabIndex = -1;\n\t          break;\n\t      }\n\n\t      return self.onKeyDown.call(self, evt);\n\t    });\n\t    self.on('blur', () => {\n\t      self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t    }); // give the control_input focus when the dropdown is open\n\n\t    self.on('dropdown_open', () => {\n\t      self.control_input.focus();\n\t    }); // prevent onBlur from closing when focus is on the control_input\n\n\t    const orig_onBlur = self.onBlur;\n\t    self.hook('instead', 'onBlur', evt => {\n\t      if (evt && evt.relatedTarget == self.control_input) return;\n\t      return orig_onBlur.call(self);\n\t    });\n\t    addEvent(self.control_input, 'blur', () => self.onBlur()); // return focus to control to allow further keyboard input\n\n\t    self.hook('before', 'close', () => {\n\t      if (!self.isOpen) return;\n\t      self.focus_node.focus({\n\t        preventScroll: true\n\t      });\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction input_autogrow () {\n\t  var self = this;\n\t  self.on('initialize', () => {\n\t    var test_input = document.createElement('span');\n\t    var control = self.control_input;\n\t    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\t    self.wrapper.appendChild(test_input);\n\t    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n\n\t    for (const style_name of transfer_styles) {\n\t      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t      test_input.style[style_name] = control.style[style_name];\n\t    }\n\t    /**\n\t     * Set the control width\n\t     *\n\t     */\n\n\n\t    var resize = () => {\n\t      test_input.textContent = control.value;\n\t      control.style.width = test_input.clientWidth + 'px';\n\t    };\n\n\t    resize();\n\t    self.on('update item_add item_remove', resize);\n\t    addEvent(control, 'input', resize);\n\t    addEvent(control, 'keyup', resize);\n\t    addEvent(control, 'blur', resize);\n\t    addEvent(control, 'update', resize);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction no_backspace_delete () {\n\t  var self = this;\n\t  var orig_deleteSelection = self.deleteSelection;\n\t  this.hook('instead', 'deleteSelection', evt => {\n\t    if (self.activeItems.length) {\n\t      return orig_deleteSelection.call(self, evt);\n\t    }\n\n\t    return false;\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"no_active_items\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction no_active_items () {\n\t  this.hook('instead', 'setActiveItem', () => {});\n\t  this.hook('instead', 'selectAll', () => {});\n\t}\n\n\t/**\n\t * Plugin: \"optgroup_columns\" (Tom Select.js)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction optgroup_columns () {\n\t  var self = this;\n\t  var orig_keydown = self.onKeyDown;\n\t  self.hook('instead', 'onKeyDown', evt => {\n\t    var index, option, options, optgroup;\n\n\t    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n\t      return orig_keydown.call(self, evt);\n\t    }\n\n\t    self.ignoreHover = true;\n\t    optgroup = parentMatch(self.activeOption, '[data-group]');\n\t    index = nodeIndex(self.activeOption, '[data-selectable]');\n\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\n\t    if (evt.keyCode === KEY_LEFT) {\n\t      optgroup = optgroup.previousSibling;\n\t    } else {\n\t      optgroup = optgroup.nextSibling;\n\t    }\n\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\n\t    options = optgroup.querySelectorAll('[data-selectable]');\n\t    option = options[Math.min(options.length - 1, index)];\n\n\t    if (option) {\n\t      self.setActiveOption(option);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"remove_button\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction remove_button (userOptions) {\n\t  const options = Object.assign({\n\t    label: '&times;',\n\t    title: 'Remove',\n\t    className: 'remove',\n\t    append: true\n\t  }, userOptions); //options.className = 'remove-single';\n\n\t  var self = this; // override the render method to add remove button to each item\n\n\t  if (!options.append) {\n\t    return;\n\t  }\n\n\t  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\n\t    self.settings.render.item = (data, escape) => {\n\t      var item = getDom(orig_render_item.call(self, data, escape));\n\t      var close_button = getDom(html);\n\t      item.appendChild(close_button);\n\t      addEvent(close_button, 'mousedown', evt => {\n\t        preventDefault(evt, true);\n\t      });\n\t      addEvent(close_button, 'click', evt => {\n\t        // propagating will trigger the dropdown to show for single mode\n\t        preventDefault(evt, true);\n\t        if (self.isLocked) return;\n\t        if (!self.shouldDelete([item], evt)) return;\n\t        self.removeItem(item);\n\t        self.refreshOptions(false);\n\t        self.inputState();\n\t      });\n\t      return item;\n\t    };\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction restore_on_backspace (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    text: option => {\n\t      return option[self.settings.labelField];\n\t    }\n\t  }, userOptions);\n\t  self.on('item_remove', function (value) {\n\t    if (!self.isFocused) {\n\t      return;\n\t    }\n\n\t    if (self.control_input.value.trim() === '') {\n\t      var option = self.options[value];\n\n\t      if (option) {\n\t        self.setTextboxValue(options.text.call(self, option));\n\t      }\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction virtual_scroll () {\n\t  const self = this;\n\t  const orig_canLoad = self.canLoad;\n\t  const orig_clearActiveOption = self.clearActiveOption;\n\t  const orig_loadCallback = self.loadCallback;\n\t  var pagination = {};\n\t  var dropdown_content;\n\t  var loading_more = false;\n\t  var load_more_opt;\n\t  var default_values = [];\n\n\t  if (!self.settings.shouldLoadMore) {\n\t    // return true if additional results should be loaded\n\t    self.settings.shouldLoadMore = () => {\n\t      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\n\t      if (scroll_percent > 0.9) {\n\t        return true;\n\t      }\n\n\t      if (self.activeOption) {\n\t        var selectable = self.selectable();\n\t        var index = [...selectable].indexOf(self.activeOption);\n\n\t        if (index >= selectable.length - 2) {\n\t          return true;\n\t        }\n\t      }\n\n\t      return false;\n\t    };\n\t  }\n\n\t  if (!self.settings.firstUrl) {\n\t    throw 'virtual_scroll plugin requires a firstUrl() method';\n\t  } // in order for virtual scrolling to work,\n\t  // options need to be ordered the same way they're returned from the remote data source\n\n\n\t  self.settings.sortField = [{\n\t    field: '$order'\n\t  }, {\n\t    field: '$score'\n\t  }]; // can we load more results for given query?\n\n\t  const canLoadMore = query => {\n\t    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n\t      return false;\n\t    }\n\n\t    if (query in pagination && pagination[query]) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  };\n\n\t  const clearFilter = (option, value) => {\n\t    if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }; // set the next url that will be\n\n\n\t  self.setNextUrl = (value, next_url) => {\n\t    pagination[value] = next_url;\n\t  }; // getUrl() to be used in settings.load()\n\n\n\t  self.getUrl = query => {\n\t    if (query in pagination) {\n\t      const next_url = pagination[query];\n\t      pagination[query] = false;\n\t      return next_url;\n\t    } // if the user goes back to a previous query\n\t    // we need to load the first page again\n\n\n\t    pagination = {};\n\t    return self.settings.firstUrl.call(self, query);\n\t  }; // don't clear the active option (and cause unwanted dropdown scroll)\n\t  // while loading more results\n\n\n\t  self.hook('instead', 'clearActiveOption', () => {\n\t    if (loading_more) {\n\t      return;\n\t    }\n\n\t    return orig_clearActiveOption.call(self);\n\t  }); // override the canLoad method\n\n\t  self.hook('instead', 'canLoad', query => {\n\t    // first time the query has been seen\n\t    if (!(query in pagination)) {\n\t      return orig_canLoad.call(self, query);\n\t    }\n\n\t    return canLoadMore(query);\n\t  }); // wrap the load\n\n\t  self.hook('instead', 'loadCallback', (options, optgroups) => {\n\t    if (!loading_more) {\n\t      self.clearOptions(clearFilter);\n\t    } else if (load_more_opt && options.length > 0) {\n\t      load_more_opt.dataset.value = options[0][self.settings.valueField];\n\t    }\n\n\t    orig_loadCallback.call(self, options, optgroups);\n\t    loading_more = false;\n\t  }); // add templates to dropdown\n\t  //\tloading_more if we have another url in the queue\n\t  //\tno_more_results if we don't have another url in the queue\n\n\t  self.hook('after', 'refreshOptions', () => {\n\t    const query = self.lastValue;\n\t    var option;\n\n\t    if (canLoadMore(query)) {\n\t      option = self.render('loading_more', {\n\t        query: query\n\t      });\n\n\t      if (option) {\n\t        option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\n\t        load_more_opt = option;\n\t      }\n\t    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n\t      option = self.render('no_more_results', {\n\t        query: query\n\t      });\n\t    }\n\n\t    if (option) {\n\t      addClasses(option, self.settings.optionClass);\n\t      dropdown_content.append(option);\n\t    }\n\t  }); // add scroll listener and default templates\n\n\t  self.on('initialize', () => {\n\t    default_values = Object.keys(self.options);\n\t    dropdown_content = self.dropdown_content; // default templates\n\n\t    self.settings.render = Object.assign({}, {\n\t      loading_more: () => {\n\t        return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t      },\n\t      no_more_results: () => {\n\t        return `<div class=\"no-more-results\">No more results</div>`;\n\t      }\n\t    }, self.settings.render); // watch dropdown content scroll position\n\n\t    dropdown_content.addEventListener('scroll', () => {\n\t      if (!self.settings.shouldLoadMore.call(self)) {\n\t        return;\n\t      } // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\n\n\t      if (!canLoadMore(self.lastValue)) {\n\t        return;\n\t      } // don't call load() too much\n\n\n\t      if (loading_more) return;\n\t      loading_more = true;\n\t      self.load.call(self, self.lastValue);\n\t    });\n\t  });\n\t}\n\n\tTomSelect.define('change_listener', change_listener);\n\tTomSelect.define('checkbox_options', checkbox_options);\n\tTomSelect.define('clear_button', clear_button);\n\tTomSelect.define('drag_drop', drag_drop);\n\tTomSelect.define('dropdown_header', dropdown_header);\n\tTomSelect.define('caret_position', caret_position);\n\tTomSelect.define('dropdown_input', dropdown_input);\n\tTomSelect.define('input_autogrow', input_autogrow);\n\tTomSelect.define('no_backspace_delete', no_backspace_delete);\n\tTomSelect.define('no_active_items', no_active_items);\n\tTomSelect.define('optgroup_columns', optgroup_columns);\n\tTomSelect.define('remove_button', remove_button);\n\tTomSelect.define('restore_on_backspace', restore_on_backspace);\n\tTomSelect.define('virtual_scroll', virtual_scroll);\n\n\treturn TomSelect;\n\n}));\nvar tomSelect=function(el,opts){return new TomSelect(el,opts);} \n//# sourceMappingURL=tom-select.complete.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t297: 0,\n\t791: 0,\n\t370: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklinkace\"] = self[\"webpackChunklinkace\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [791,370], () => (__webpack_require__(240)))\n__webpack_require__.O(undefined, [791,370], () => (__webpack_require__(811)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [791,370], () => (__webpack_require__(773)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","$views","views","register","name","invokable","$root","document","documentElement","$elements","querySelectorAll","forEach","$element","getInstance","index","indexOf","view","push","Base","this","initAppData","data","querySelector","getAttribute","window","appData","JSON","parse","debounce","callback","timeout","timeoutId","clearTimeout","setTimeout","TomSelect","TomSelect_caret_position","TomSelect_input_autogrow","TagsSelect","$el","dataset","tagType","type","select","$suggestions","parentElement","$suggestionsContent","config","plugins","delimiter","persist","create","selectAllowsCreation","onItemAdd","setTextboxValue","refreshOptions","load","query","handleTagLoading","allowCreation","length","fetch","getFetchUrl","method","credentials","headers","body","stringify","_token","user","token","then","response","json","results","routes","searchTags","searchLists","tags","innerHTML","newTag","trim","$tag","createElement","classList","add","innerText","onclick","onSuggestionClick","bind","appendChild","remove","value","addOption","text","addItem","UrlField","$field","$linkExistsWarning","$linkExistsLink","$tags","tagSuggestions","addEventListener","onKeyup","checkForExistingUrl","resetField","url","checkUrl","existingLinks","ignore_id","ignoreId","result","linkFound","href","editLink","querySiteForMetaTags","htmlForUrl","parseHtmlForKeywords","doc","DOMParser","parseFromString","head","children","keywords","namedItem","content","displayNewSuggestions","split","LoadingButton","$btn","$form","form","onClick","checkValidity","disabled","submit","BookmarkTimer","init","setInterval","parseInt","close","SimpleSelect","ShareToggleAll","$toggle","shareToggles","onToggleClick","toggle","checked","GenerateApiToken","$input","$failureMsg","onButtonClick","fetchNewToken","fetchURL","generateApiToken","handleResponse","showFailureMsg","new_token","GenerateCronToken","$cronUrl","confirm","confirmMessage","generateCronToken","buildCronURl","newToken","cronUrlBase","UpdateCheck","currentVersion","$running","$versionFound","$success","$failed","checkForUpdate","updateCheckStatus","replace","updateCheck","checkResult","Import","$file","$submit","$submitProcessing","$submitDefault","$alertNetworkError","$alertWarning","$alertSuccess","onSubmit","toggleSubmitBtnState","formData","FormData","append","files","action","ok","console","log","success","message","isProcessing","registerViews","readyState","module","exports","latin_convert","RegExp","Object","keys","join","iterate","object","Array","isArray","key","hasOwnProperty","removeClasses","elmts","classes","norm_classes","classesArray","castAsArray","map","el","cls","args","_classes","concat","filter","Boolean","arg","nodeIndex","amongst","nodeName","i","previousElementSibling","matches","plugin","self","hook","new_pos","settings","mode","control","contains","control_input","Math","max","min","items","caretPos","isPending","controlChildren","child","j","insertAdjacentElement","direction","isFocused","last_active","getLastActive","idx","setCaret","setActiveItem","factory","addEvent","target","options","on","test_input","style","cssText","wrapper","transfer_styles","style_name","resize","textContent","width","clientWidth","forEvents","events","event","MicroEvent","constructor","_events","fct","off","n","arguments","splice","trigger","apply","MicroPlugin","Interface","super","names","requested","loaded","static","fn","initializePlugins","queue","shift","require","loadPlugin","Error","latin_pat","accent_pat","accent_reg","diacritic_patterns","convert_pat","code_points","asciifold","str","normalize","toLowerCase","foreignletter","arrayToPattern","chars","glue","longest","a","escapeToPattern","escaped","diacritic","escape_regex","allSubstrings","input","substring","subresult","tmp","slice","charAt","unshift","generateDiacritics","diacritics","code_range","String","fromCharCode","latin","patt","match","latin_chars","sort","b","pattern","sub_pat","l","diacriticRegexPoints","regex","undefined","part","no_accent","getAttr","obj","getAttrNesting","scoreValue","weight","score","pos","search","string","propToArray","cmp","Sifter","tokenize","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_empty","sort_flds","multipliers","get_field","id","sort_flds_count","sort_fld","multiplier","optsUser","assign","total","nesting","fn_score","item","_","fn_sort","limit","getDom","jquery","HTMLElement","isHtmlString","div","firstChild","escapeQuery","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","addClasses","parentMatch","selector","parentNode","getTail","list","isEmptyObject","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightText","node","spannode","className","middlebit","splitText","middleclone","cloneNode","highlightChildren","nodeType","childNodes","test","tagName","highlightRecursive","removeHighlight","elements","prototype","call","parent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_BACKSPACE","KEY_DELETE","KEY_TAB","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","splitOn","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","delay","loading","loadedSearches","debounce_events","types","event_args","getSelection","start","selectionStart","selectionEnd","preventDefault","evt","stop","stopPropagation","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","addSlashes","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","optionsMap","group_count","readData","addGroup","settings_element","init_textbox","data_raw","opt","values","group","arr","option_data","$option","selected","optgroup","optgroup_data","hasAttribute","instance_i","input_arg","user_settings","dir","dropdown","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isRequired","isInvalid","isValid","isLocked","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","activeOption","activeItems","userOptions","tomselect","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","setup","passive_event","passive","listboxId","role","control_id","label","label_click","focus","for","label_id","classes_plugins","multiple","e","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onKeyDown","onKeyPress","onInput","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","win_hover","removeEventListener","revertSettings","sync","refreshState","updateOriginalInput","refreshItems","disable","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","escape","callbacks","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","wasFocused","showInput","hasFocus","deactivate","closeAfterSelect","canLoad","loadCallback","clearActiveOption","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","setActiveItemClass","removeActiveItem","hideInput","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scrollBehavior","offsetWidth","getSearchOptions","calculateScore","hashed","triggerDropdown","k","html","has_create_option","active_value","active_group","groups","groups_order","active_option","show_dropdown","closest","opt_value","option_el","getOption","includes","createDocumentFragment","$id","$order","group_options","header","group_html","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","all","x","wasFull","isFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","rm_items","shouldDelete","pop","onDelete","adjacent","nextElementSibling","moveCaret","from","destroy","templateName","when","new_fn","orig_method","result_new","change_listener","checkbox_options","orig_onOptionSelect","UpdateCheckbox","checkbox","HTMLInputElement","orig_render_option","rendered","prepend","clear_button","title","button","drag_drop","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","dropdown_header","headerClass","titleRowClass","labelClass","closeClass","close_link","caret_position","dropdown_input","orig_onBlur","relatedTarget","preventScroll","input_autogrow","no_backspace_delete","orig_deleteSelection","no_active_items","optgroup_columns","orig_keydown","previousSibling","nextSibling","remove_button","orig_render_item","close_button","restore_on_backspace","virtual_scroll","orig_canLoad","orig_clearActiveOption","orig_loadCallback","load_more_opt","pagination","loading_more","default_values","shouldLoadMore","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","no_more_results","define","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","every","r","getter","__esModule","d","definition","o","defineProperty","enumerable","get","prop","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}